<?xml version="1.0" encoding="UTF-8"?>
<zabbix_export>
    <version>3.0</version>
    <date>2017-07-02T09:58:41Z</date>
    <groups>
        <group>
            <name>CloudWatch</name>
        </group>
        <group>
            <name>Templates</name>
        </group>
    </groups>
    <templates>
        <template>
            <template>Template_AWS_Services</template>
            <name>Template_AWS_Services</name>
            <description/>
            <groups>
                <group>
                    <name>CloudWatch</name>
                </group>
                <group>
                    <name>Templates</name>
                </group>
            </groups>
            <applications>
                <application>
                    <name>AWS ASG</name>
                </application>
                <application>
                    <name>AWS DynamoDB</name>
                </application>
                <application>
                    <name>AWS ELB</name>
                </application>
                <application>
                    <name>AWS RDS</name>
                </application>
                <application>
                    <name>EC2 Summary</name>
                </application>
            </applications>
            <items/>
            <discovery_rules>
                <discovery_rule>
                    <name>AWS EC2 ASG Discovery</name>
                    <type>7</type>
                    <snmp_community/>
                    <snmp_oid/>
                    <key>cloudwatch.discovery[ASG]</key>
                    <delay>1800</delay>
                    <status>0</status>
                    <allowed_hosts/>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <delay_flex/>
                    <params/>
                    <ipmi_sensor/>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <filter>
                        <evaltype>0</evaltype>
                        <formula/>
                        <conditions/>
                    </filter>
                    <lifetime>7</lifetime>
                    <description>Discovery of Amazon AWS EC2 ASG.</description>
                    <item_prototypes>
                        <item_prototype>
                            <name>Desired Capacity of ASG {#ASGNAME} in region {#ASGREGION}</name>
                            <type>7</type>
                            <snmp_community/>
                            <multiplier>0</multiplier>
                            <snmp_oid/>
                            <key>cloudwatch.dimension[GroupDesiredCapacity,ASG,Maximum,{#ASGNAME},{#ASGREGION},60]</key>
                            <delay>120</delay>
                            <history>90</history>
                            <trends>365</trends>
                            <status>0</status>
                            <value_type>3</value_type>
                            <allowed_hosts/>
                            <units>Instances</units>
                            <delta>0</delta>
                            <snmpv3_contextname/>
                            <snmpv3_securityname/>
                            <snmpv3_securitylevel>0</snmpv3_securitylevel>
                            <snmpv3_authprotocol>0</snmpv3_authprotocol>
                            <snmpv3_authpassphrase/>
                            <snmpv3_privprotocol>0</snmpv3_privprotocol>
                            <snmpv3_privpassphrase/>
                            <formula>1</formula>
                            <delay_flex/>
                            <params/>
                            <ipmi_sensor/>
                            <data_type>0</data_type>
                            <authtype>0</authtype>
                            <username/>
                            <password/>
                            <publickey/>
                            <privatekey/>
                            <port/>
                            <description/>
                            <inventory_link>0</inventory_link>
                            <applications>
                                <application>
                                    <name>AWS ASG</name>
                                </application>
                            </applications>
                            <valuemap/>
                            <logtimefmt/>
                            <application_prototypes/>
                        </item_prototype>
                        <item_prototype>
                            <name>InService Instances in ASG {#ASGNAME} in region {#ASGREGION}</name>
                            <type>7</type>
                            <snmp_community/>
                            <multiplier>0</multiplier>
                            <snmp_oid/>
                            <key>cloudwatch.dimension[GroupInServiceInstances,ASG,Maximum,{#ASGNAME},{#ASGREGION},60]</key>
                            <delay>120</delay>
                            <history>90</history>
                            <trends>365</trends>
                            <status>0</status>
                            <value_type>3</value_type>
                            <allowed_hosts/>
                            <units>Instances</units>
                            <delta>0</delta>
                            <snmpv3_contextname/>
                            <snmpv3_securityname/>
                            <snmpv3_securitylevel>0</snmpv3_securitylevel>
                            <snmpv3_authprotocol>0</snmpv3_authprotocol>
                            <snmpv3_authpassphrase/>
                            <snmpv3_privprotocol>0</snmpv3_privprotocol>
                            <snmpv3_privpassphrase/>
                            <formula>1</formula>
                            <delay_flex/>
                            <params/>
                            <ipmi_sensor/>
                            <data_type>0</data_type>
                            <authtype>0</authtype>
                            <username/>
                            <password/>
                            <publickey/>
                            <privatekey/>
                            <port/>
                            <description/>
                            <inventory_link>0</inventory_link>
                            <applications>
                                <application>
                                    <name>AWS ASG</name>
                                </application>
                            </applications>
                            <valuemap/>
                            <logtimefmt/>
                            <application_prototypes/>
                        </item_prototype>
                        <item_prototype>
                            <name>Max Size of ASG {#ASGNAME} in region {#ASGREGION}</name>
                            <type>7</type>
                            <snmp_community/>
                            <multiplier>0</multiplier>
                            <snmp_oid/>
                            <key>cloudwatch.dimension[GroupMaxSize,ASG,Maximum,{#ASGNAME},{#ASGREGION},60]</key>
                            <delay>1800</delay>
                            <history>90</history>
                            <trends>365</trends>
                            <status>0</status>
                            <value_type>3</value_type>
                            <allowed_hosts/>
                            <units>Instances</units>
                            <delta>0</delta>
                            <snmpv3_contextname/>
                            <snmpv3_securityname/>
                            <snmpv3_securitylevel>0</snmpv3_securitylevel>
                            <snmpv3_authprotocol>0</snmpv3_authprotocol>
                            <snmpv3_authpassphrase/>
                            <snmpv3_privprotocol>0</snmpv3_privprotocol>
                            <snmpv3_privpassphrase/>
                            <formula>1</formula>
                            <delay_flex/>
                            <params/>
                            <ipmi_sensor/>
                            <data_type>0</data_type>
                            <authtype>0</authtype>
                            <username/>
                            <password/>
                            <publickey/>
                            <privatekey/>
                            <port/>
                            <description/>
                            <inventory_link>0</inventory_link>
                            <applications>
                                <application>
                                    <name>AWS ASG</name>
                                </application>
                            </applications>
                            <valuemap/>
                            <logtimefmt/>
                            <application_prototypes/>
                        </item_prototype>
                        <item_prototype>
                            <name>Min Size of ASG {#ASGNAME} in region {#ASGREGION}</name>
                            <type>7</type>
                            <snmp_community/>
                            <multiplier>0</multiplier>
                            <snmp_oid/>
                            <key>cloudwatch.dimension[GroupMinSize,ASG,Maximum,{#ASGNAME},{#ASGREGION},60]</key>
                            <delay>1800</delay>
                            <history>90</history>
                            <trends>365</trends>
                            <status>0</status>
                            <value_type>3</value_type>
                            <allowed_hosts/>
                            <units>Instances</units>
                            <delta>0</delta>
                            <snmpv3_contextname/>
                            <snmpv3_securityname/>
                            <snmpv3_securitylevel>0</snmpv3_securitylevel>
                            <snmpv3_authprotocol>0</snmpv3_authprotocol>
                            <snmpv3_authpassphrase/>
                            <snmpv3_privprotocol>0</snmpv3_privprotocol>
                            <snmpv3_privpassphrase/>
                            <formula>1</formula>
                            <delay_flex/>
                            <params/>
                            <ipmi_sensor/>
                            <data_type>0</data_type>
                            <authtype>0</authtype>
                            <username/>
                            <password/>
                            <publickey/>
                            <privatekey/>
                            <port/>
                            <description/>
                            <inventory_link>0</inventory_link>
                            <applications>
                                <application>
                                    <name>AWS ASG</name>
                                </application>
                            </applications>
                            <valuemap/>
                            <logtimefmt/>
                            <application_prototypes/>
                        </item_prototype>
                        <item_prototype>
                            <name>Total Instances in ASG {#ASGNAME} in region {#ASGREGION}</name>
                            <type>7</type>
                            <snmp_community/>
                            <multiplier>0</multiplier>
                            <snmp_oid/>
                            <key>cloudwatch.dimension[GroupTotalInstances,ASG,Maximum,{#ASGNAME},{#ASGREGION},60]</key>
                            <delay>120</delay>
                            <history>90</history>
                            <trends>365</trends>
                            <status>0</status>
                            <value_type>3</value_type>
                            <allowed_hosts/>
                            <units>Instances</units>
                            <delta>0</delta>
                            <snmpv3_contextname/>
                            <snmpv3_securityname/>
                            <snmpv3_securitylevel>0</snmpv3_securitylevel>
                            <snmpv3_authprotocol>0</snmpv3_authprotocol>
                            <snmpv3_authpassphrase/>
                            <snmpv3_privprotocol>0</snmpv3_privprotocol>
                            <snmpv3_privpassphrase/>
                            <formula>1</formula>
                            <delay_flex/>
                            <params/>
                            <ipmi_sensor/>
                            <data_type>0</data_type>
                            <authtype>0</authtype>
                            <username/>
                            <password/>
                            <publickey/>
                            <privatekey/>
                            <port/>
                            <description/>
                            <inventory_link>0</inventory_link>
                            <applications>
                                <application>
                                    <name>AWS ASG</name>
                                </application>
                            </applications>
                            <valuemap/>
                            <logtimefmt/>
                            <application_prototypes/>
                        </item_prototype>
                        <item_prototype>
                            <name>UnHealthy Instances in ASG {#ASGNAME} in region {#ASGREGION}</name>
                            <type>7</type>
                            <snmp_community/>
                            <multiplier>0</multiplier>
                            <snmp_oid/>
                            <key>cloudwatch.dimension[GroupUnHealthyInstances,ASG,Maximum,{#ASGNAME},{#ASGREGION},60]</key>
                            <delay>120</delay>
                            <history>90</history>
                            <trends>365</trends>
                            <status>1</status>
                            <value_type>3</value_type>
                            <allowed_hosts/>
                            <units>Instances</units>
                            <delta>0</delta>
                            <snmpv3_contextname/>
                            <snmpv3_securityname/>
                            <snmpv3_securitylevel>0</snmpv3_securitylevel>
                            <snmpv3_authprotocol>0</snmpv3_authprotocol>
                            <snmpv3_authpassphrase/>
                            <snmpv3_privprotocol>0</snmpv3_privprotocol>
                            <snmpv3_privpassphrase/>
                            <formula>1</formula>
                            <delay_flex/>
                            <params/>
                            <ipmi_sensor/>
                            <data_type>0</data_type>
                            <authtype>0</authtype>
                            <username/>
                            <password/>
                            <publickey/>
                            <privatekey/>
                            <port/>
                            <description/>
                            <inventory_link>0</inventory_link>
                            <applications>
                                <application>
                                    <name>AWS ASG</name>
                                </application>
                            </applications>
                            <valuemap/>
                            <logtimefmt/>
                            <application_prototypes/>
                        </item_prototype>
                    </item_prototypes>
                    <trigger_prototypes>
                        <trigger_prototype>
                            <expression>{Template_AWS_Services:cloudwatch.dimension[GroupTotalInstances,ASG,Maximum,{#ASGNAME},{#ASGREGION},60].nodata(600)}=1</expression>
                            <name>Cannot collect data from ASG {#ASGNAME} in region {#ASGREGION}</name>
                            <url/>
                            <status>0</status>
                            <priority>3</priority>
                            <description>Alert if no data collected for 6 minutes</description>
                            <type>0</type>
                            <dependencies/>
                        </trigger_prototype>
                        <trigger_prototype>
                            <expression>{Template_AWS_Services:cloudwatch.dimension[GroupMinSize,ASG,Maximum,{#ASGNAME},{#ASGREGION},60].max(360)}&gt;{Template_AWS_Services:cloudwatch.dimension[GroupDesiredCapacity,ASG,Maximum,{#ASGNAME},{#ASGREGION},60].max(360)}</expression>
                            <name>Desired size less than minimum size in ASG {#ASGNAME} in region {#ASGREGION}</name>
                            <url/>
                            <status>0</status>
                            <priority>4</priority>
                            <description>Trigger if the desired size of an ASG is less than the minimum group size.</description>
                            <type>0</type>
                            <dependencies/>
                        </trigger_prototype>
                        <trigger_prototype>
                            <expression>{Template_AWS_Services:cloudwatch.dimension[GroupMaxSize,ASG,Maximum,{#ASGNAME},{#ASGREGION},60].delta(3600)}&lt;&gt;0</expression>
                            <name>Max size changed in ASG {#ASGNAME} in region {#ASGREGION}</name>
                            <url/>
                            <status>0</status>
                            <priority>2</priority>
                            <description>Trigger if there has been a change in the max size of ASG in past hour.</description>
                            <type>0</type>
                            <dependencies/>
                        </trigger_prototype>
                        <trigger_prototype>
                            <expression>{Template_AWS_Services:cloudwatch.dimension[GroupMinSize,ASG,Maximum,{#ASGNAME},{#ASGREGION},60].delta(3600)}&lt;&gt;0</expression>
                            <name>Min size changed in ASG {#ASGNAME} in region {#ASGREGION}</name>
                            <url/>
                            <status>0</status>
                            <priority>2</priority>
                            <description>Trigger if there has been a change in the min size of ASG in past hour.</description>
                            <type>0</type>
                            <dependencies/>
                        </trigger_prototype>
                        <trigger_prototype>
                            <expression>{Template_AWS_Services:cloudwatch.dimension[GroupInServiceInstances,ASG,Maximum,{#ASGNAME},{#ASGREGION},60].max(360)}=0 and {Template_AWS_Services:cloudwatch.dimension[GroupMinSize,ASG,Maximum,{#ASGNAME},{#ASGREGION},60].last()}&gt;0</expression>
                            <name>No instances In Service in ASG {#ASGNAME} in region {#ASGREGION}</name>
                            <url/>
                            <status>0</status>
                            <priority>4</priority>
                            <description>Trigger when 0 instances in service in ASG and minimum defined instances is greater than Zero.</description>
                            <type>0</type>
                            <dependencies/>
                        </trigger_prototype>
                    </trigger_prototypes>
                    <graph_prototypes/>
                    <host_prototypes/>
                </discovery_rule>
                <discovery_rule>
                    <name>AWS DynamoDB Discovery</name>
                    <type>7</type>
                    <snmp_community/>
                    <snmp_oid/>
                    <key>cloudwatch.discovery[DynamoDB]</key>
                    <delay>1800</delay>
                    <status>0</status>
                    <allowed_hosts/>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <delay_flex/>
                    <params/>
                    <ipmi_sensor/>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <filter>
                        <evaltype>0</evaltype>
                        <formula/>
                        <conditions/>
                    </filter>
                    <lifetime>30</lifetime>
                    <description>Discover all DynamoDB tables in account</description>
                    <item_prototypes>
                        <item_prototype>
                            <name>Consumed Read Capacity Units in DynamoDB Table {#DDBTABLE} in region {#REGION}</name>
                            <type>7</type>
                            <snmp_community/>
                            <multiplier>1</multiplier>
                            <snmp_oid/>
                            <key>cloudwatch.dimension[ConsumedReadCapacityUnits,DynamoDB,Sum,{#DDBTABLE},{#REGION},60]</key>
                            <delay>60</delay>
                            <history>90</history>
                            <trends>365</trends>
                            <status>0</status>
                            <value_type>0</value_type>
                            <allowed_hosts/>
                            <units>units</units>
                            <delta>0</delta>
                            <snmpv3_contextname/>
                            <snmpv3_securityname/>
                            <snmpv3_securitylevel>0</snmpv3_securitylevel>
                            <snmpv3_authprotocol>0</snmpv3_authprotocol>
                            <snmpv3_authpassphrase/>
                            <snmpv3_privprotocol>0</snmpv3_privprotocol>
                            <snmpv3_privpassphrase/>
                            <formula>0.01666666666</formula>
                            <delay_flex/>
                            <params/>
                            <ipmi_sensor/>
                            <data_type>0</data_type>
                            <authtype>0</authtype>
                            <username/>
                            <password/>
                            <publickey/>
                            <privatekey/>
                            <port/>
                            <description>Number of Consumed Read Capacity Units in a given DynamoDB table.&#13;
&#13;
Sum of 1 minute interval with custom multiplier of ~ 1/60 to give average over one minute per second as described in AWS documentation.</description>
                            <inventory_link>0</inventory_link>
                            <applications>
                                <application>
                                    <name>AWS DynamoDB</name>
                                </application>
                            </applications>
                            <valuemap/>
                            <logtimefmt/>
                            <application_prototypes/>
                        </item_prototype>
                        <item_prototype>
                            <name>Consumed Write Capacity Units in DynamoDB Table {#DDBTABLE} in region {#REGION}</name>
                            <type>7</type>
                            <snmp_community/>
                            <multiplier>1</multiplier>
                            <snmp_oid/>
                            <key>cloudwatch.dimension[ConsumedWriteCapacityUnits,DynamoDB,Sum,{#DDBTABLE},{#REGION},60]</key>
                            <delay>60</delay>
                            <history>90</history>
                            <trends>365</trends>
                            <status>0</status>
                            <value_type>0</value_type>
                            <allowed_hosts/>
                            <units>units</units>
                            <delta>0</delta>
                            <snmpv3_contextname/>
                            <snmpv3_securityname/>
                            <snmpv3_securitylevel>0</snmpv3_securitylevel>
                            <snmpv3_authprotocol>0</snmpv3_authprotocol>
                            <snmpv3_authpassphrase/>
                            <snmpv3_privprotocol>0</snmpv3_privprotocol>
                            <snmpv3_privpassphrase/>
                            <formula>0.01666666666</formula>
                            <delay_flex/>
                            <params/>
                            <ipmi_sensor/>
                            <data_type>0</data_type>
                            <authtype>0</authtype>
                            <username/>
                            <password/>
                            <publickey/>
                            <privatekey/>
                            <port/>
                            <description>Number of Consumed Write Capacity Units in a given DynamoDB table.&#13;
&#13;
Sum of 1 minute interval with custom multiplier of ~ 1/60 to give average over one minute per second as described in AWS documentation.</description>
                            <inventory_link>0</inventory_link>
                            <applications>
                                <application>
                                    <name>AWS DynamoDB</name>
                                </application>
                            </applications>
                            <valuemap/>
                            <logtimefmt/>
                            <application_prototypes/>
                        </item_prototype>
                        <item_prototype>
                            <name>Provisioned Read Capacity Units in DynamoDB Table {#DDBTABLE} in region {#REGION}</name>
                            <type>7</type>
                            <snmp_community/>
                            <multiplier>0</multiplier>
                            <snmp_oid/>
                            <key>cloudwatch.dimension[ProvisionedReadCapacityUnits,DynamoDB,Maximum,{#DDBTABLE},{#REGION},600]</key>
                            <delay>300</delay>
                            <history>90</history>
                            <trends>365</trends>
                            <status>0</status>
                            <value_type>0</value_type>
                            <allowed_hosts/>
                            <units>units</units>
                            <delta>0</delta>
                            <snmpv3_contextname/>
                            <snmpv3_securityname/>
                            <snmpv3_securitylevel>0</snmpv3_securitylevel>
                            <snmpv3_authprotocol>0</snmpv3_authprotocol>
                            <snmpv3_authpassphrase/>
                            <snmpv3_privprotocol>0</snmpv3_privprotocol>
                            <snmpv3_privpassphrase/>
                            <formula>1</formula>
                            <delay_flex/>
                            <params/>
                            <ipmi_sensor/>
                            <data_type>0</data_type>
                            <authtype>0</authtype>
                            <username/>
                            <password/>
                            <publickey/>
                            <privatekey/>
                            <port/>
                            <description>Provisioned Read Capacity Units in a give DynamoDB table.</description>
                            <inventory_link>0</inventory_link>
                            <applications>
                                <application>
                                    <name>AWS DynamoDB</name>
                                </application>
                            </applications>
                            <valuemap/>
                            <logtimefmt/>
                            <application_prototypes/>
                        </item_prototype>
                        <item_prototype>
                            <name>Provisioned Write Capacity Units in DynamoDB Table {#DDBTABLE} in region {#REGION}</name>
                            <type>7</type>
                            <snmp_community/>
                            <multiplier>0</multiplier>
                            <snmp_oid/>
                            <key>cloudwatch.dimension[ProvisionedWriteCapacityUnits,DynamoDB,Maximum,{#DDBTABLE},{#REGION},600]</key>
                            <delay>300</delay>
                            <history>90</history>
                            <trends>365</trends>
                            <status>0</status>
                            <value_type>0</value_type>
                            <allowed_hosts/>
                            <units>units</units>
                            <delta>0</delta>
                            <snmpv3_contextname/>
                            <snmpv3_securityname/>
                            <snmpv3_securitylevel>0</snmpv3_securitylevel>
                            <snmpv3_authprotocol>0</snmpv3_authprotocol>
                            <snmpv3_authpassphrase/>
                            <snmpv3_privprotocol>0</snmpv3_privprotocol>
                            <snmpv3_privpassphrase/>
                            <formula>1</formula>
                            <delay_flex/>
                            <params/>
                            <ipmi_sensor/>
                            <data_type>0</data_type>
                            <authtype>0</authtype>
                            <username/>
                            <password/>
                            <publickey/>
                            <privatekey/>
                            <port/>
                            <description>Provisioned Write Capacity Units in a give DynamoDB table.</description>
                            <inventory_link>0</inventory_link>
                            <applications>
                                <application>
                                    <name>AWS DynamoDB</name>
                                </application>
                            </applications>
                            <valuemap/>
                            <logtimefmt/>
                            <application_prototypes/>
                        </item_prototype>
                        <item_prototype>
                            <name>Read Throttle Events in DynamoDB Table {#DDBTABLE} in region {#REGION}</name>
                            <type>7</type>
                            <snmp_community/>
                            <multiplier>1</multiplier>
                            <snmp_oid/>
                            <key>cloudwatch.dimension[ReadThrottleEvents,DynamoDB,Sum,{#DDBTABLE},{#REGION},300]</key>
                            <delay>300</delay>
                            <history>90</history>
                            <trends>365</trends>
                            <status>0</status>
                            <value_type>0</value_type>
                            <allowed_hosts/>
                            <units>ev/min</units>
                            <delta>0</delta>
                            <snmpv3_contextname/>
                            <snmpv3_securityname/>
                            <snmpv3_securitylevel>0</snmpv3_securitylevel>
                            <snmpv3_authprotocol>0</snmpv3_authprotocol>
                            <snmpv3_authpassphrase/>
                            <snmpv3_privprotocol>0</snmpv3_privprotocol>
                            <snmpv3_privpassphrase/>
                            <formula>0.2</formula>
                            <delay_flex/>
                            <params/>
                            <ipmi_sensor/>
                            <data_type>0</data_type>
                            <authtype>0</authtype>
                            <username/>
                            <password/>
                            <publickey/>
                            <privatekey/>
                            <port/>
                            <description>Number of throttled read events in a give DynamoDB table in the past 5 minutes averaged per minute.</description>
                            <inventory_link>0</inventory_link>
                            <applications>
                                <application>
                                    <name>AWS DynamoDB</name>
                                </application>
                            </applications>
                            <valuemap/>
                            <logtimefmt/>
                            <application_prototypes/>
                        </item_prototype>
                        <item_prototype>
                            <name>System Errors (HTTP 500 status codes) DynamoDB Table {#DDBTABLE} in region {#REGION}</name>
                            <type>7</type>
                            <snmp_community/>
                            <multiplier>0</multiplier>
                            <snmp_oid/>
                            <key>cloudwatch.dimension[SystemErrors,DynamoDB,Sum,{#DDBTABLE},{#REGION},300]</key>
                            <delay>300</delay>
                            <history>90</history>
                            <trends>365</trends>
                            <status>0</status>
                            <value_type>0</value_type>
                            <allowed_hosts/>
                            <units>err/min</units>
                            <delta>0</delta>
                            <snmpv3_contextname/>
                            <snmpv3_securityname/>
                            <snmpv3_securitylevel>0</snmpv3_securitylevel>
                            <snmpv3_authprotocol>0</snmpv3_authprotocol>
                            <snmpv3_authpassphrase/>
                            <snmpv3_privprotocol>0</snmpv3_privprotocol>
                            <snmpv3_privpassphrase/>
                            <formula>1</formula>
                            <delay_flex/>
                            <params/>
                            <ipmi_sensor/>
                            <data_type>0</data_type>
                            <authtype>0</authtype>
                            <username/>
                            <password/>
                            <publickey/>
                            <privatekey/>
                            <port/>
                            <description>Requests to DynamoDB that generate an HTTP 500 status code in past 5 minutes. An HTTP 500 usually indicates an internal service error. Averaged per minute.</description>
                            <inventory_link>0</inventory_link>
                            <applications>
                                <application>
                                    <name>AWS DynamoDB</name>
                                </application>
                            </applications>
                            <valuemap/>
                            <logtimefmt/>
                            <application_prototypes/>
                        </item_prototype>
                        <item_prototype>
                            <name>Write Throttle Events in DynamoDB Table {#DDBTABLE} in region {#REGION}</name>
                            <type>7</type>
                            <snmp_community/>
                            <multiplier>1</multiplier>
                            <snmp_oid/>
                            <key>cloudwatch.dimension[WriteThrottleEvents,DynamoDB,Sum,{#DDBTABLE},{#REGION},300]</key>
                            <delay>300</delay>
                            <history>90</history>
                            <trends>365</trends>
                            <status>0</status>
                            <value_type>0</value_type>
                            <allowed_hosts/>
                            <units>ev/min</units>
                            <delta>0</delta>
                            <snmpv3_contextname/>
                            <snmpv3_securityname/>
                            <snmpv3_securitylevel>0</snmpv3_securitylevel>
                            <snmpv3_authprotocol>0</snmpv3_authprotocol>
                            <snmpv3_authpassphrase/>
                            <snmpv3_privprotocol>0</snmpv3_privprotocol>
                            <snmpv3_privpassphrase/>
                            <formula>0.2</formula>
                            <delay_flex/>
                            <params/>
                            <ipmi_sensor/>
                            <data_type>0</data_type>
                            <authtype>0</authtype>
                            <username/>
                            <password/>
                            <publickey/>
                            <privatekey/>
                            <port/>
                            <description>Number of throttled write events in a give DynamoDB table in the past 5 minutes averaged per minute.</description>
                            <inventory_link>0</inventory_link>
                            <applications>
                                <application>
                                    <name>AWS DynamoDB</name>
                                </application>
                            </applications>
                            <valuemap/>
                            <logtimefmt/>
                            <application_prototypes/>
                        </item_prototype>
                    </item_prototypes>
                    <trigger_prototypes>
                        <trigger_prototype>
                            <expression>{Template_AWS_Services:cloudwatch.dimension[ConsumedReadCapacityUnits,DynamoDB,Sum,{#DDBTABLE},{#REGION},60].avg(15m)}/60&gt;{Template_AWS_Services:cloudwatch.dimension[ProvisionedReadCapacityUnits,DynamoDB,Maximum,{#DDBTABLE},{#REGION},600].last()} or ({TRIGGER.VALUE}=1 and {Template_AWS_Services:cloudwatch.dimension[ConsumedReadCapacityUnits,DynamoDB,Sum,{#DDBTABLE},{#REGION},60].avg(15m)}/60&gt;0.9*{Template_AWS_Services:cloudwatch.dimension[ProvisionedReadCapacityUnits,DynamoDB,Maximum,{#DDBTABLE},{#REGION},600].last()})</expression>
                            <name>Consumed Read Capacity above Provisioned for 15min in table {#DDBTABLE} in region {#REGION}</name>
                            <url/>
                            <status>0</status>
                            <priority>4</priority>
                            <description>Trigger if Read capacity above of provisioned for 15 minutes.</description>
                            <type>0</type>
                            <dependencies/>
                        </trigger_prototype>
                        <trigger_prototype>
                            <expression>{Template_AWS_Services:cloudwatch.dimension[ConsumedWriteCapacityUnits,DynamoDB,Sum,{#DDBTABLE},{#REGION},60].avg(15m)}/60&gt;{Template_AWS_Services:cloudwatch.dimension[ProvisionedReadCapacityUnits,DynamoDB,Maximum,{#DDBTABLE},{#REGION},600].last()} or ({TRIGGER.VALUE}=1 and {Template_AWS_Services:cloudwatch.dimension[ConsumedWriteCapacityUnits,DynamoDB,Sum,{#DDBTABLE},{#REGION},60].avg(15m)}/60&gt;0.9*{Template_AWS_Services:cloudwatch.dimension[ProvisionedReadCapacityUnits,DynamoDB,Maximum,{#DDBTABLE},{#REGION},600].last()})</expression>
                            <name>Consumed Write Capacity above Provisioned for 15min in table {#DDBTABLE} in region {#REGION}</name>
                            <url/>
                            <status>0</status>
                            <priority>4</priority>
                            <description>Trigger if write capacity above provisioned for 15 minutes.</description>
                            <type>0</type>
                            <dependencies/>
                        </trigger_prototype>
                        <trigger_prototype>
                            <expression>{Template_AWS_Services:cloudwatch.dimension[SystemErrors,DynamoDB,Sum,{#DDBTABLE},{#REGION},300].last()}/300&gt;10  or ({TRIGGER.VALUE}=1 and {Template_AWS_Services:cloudwatch.dimension[SystemErrors,DynamoDB,Sum,{#DDBTABLE},{#REGION},300].avg(15m)}/300&gt;10)</expression>
                            <name>System Errors (HTTP 500 codes) in DynamoDB table {#DDBTABLE} in region {#REGION}</name>
                            <url/>
                            <status>0</status>
                            <priority>3</priority>
                            <description>Trigger if throttled write events is above zero for 5 minutes.</description>
                            <type>0</type>
                            <dependencies/>
                        </trigger_prototype>
                        <trigger_prototype>
                            <expression>{Template_AWS_Services:cloudwatch.dimension[ReadThrottleEvents,DynamoDB,Sum,{#DDBTABLE},{#REGION},300].avg(10m)}/300&gt;10  or ({TRIGGER.VALUE}=1 and {Template_AWS_Services:cloudwatch.dimension[ReadThrottleEvents,DynamoDB,Sum,{#DDBTABLE},{#REGION},300].max(15m)}&gt;0)</expression>
                            <name>Throttled read events in DynamoDB table {#DDBTABLE} in region {#REGION}</name>
                            <url/>
                            <status>0</status>
                            <priority>3</priority>
                            <description>Trigger if throttled read events is above zero for 10 minutes.</description>
                            <type>0</type>
                            <dependencies/>
                        </trigger_prototype>
                        <trigger_prototype>
                            <expression>{Template_AWS_Services:cloudwatch.dimension[WriteThrottleEvents,DynamoDB,Sum,{#DDBTABLE},{#REGION},300].avg(10m)}/300&gt;10  or ({TRIGGER.VALUE}=1 and {Template_AWS_Services:cloudwatch.dimension[WriteThrottleEvents,DynamoDB,Sum,{#DDBTABLE},{#REGION},300].max(15m)}&gt;10)</expression>
                            <name>Throttled write events in DynamoDB table {#DDBTABLE} in region {#REGION}</name>
                            <url/>
                            <status>0</status>
                            <priority>3</priority>
                            <description>Trigger if throttled write events is above zero for 5 minutes.</description>
                            <type>0</type>
                            <dependencies/>
                        </trigger_prototype>
                    </trigger_prototypes>
                    <graph_prototypes>
                        <graph_prototype>
                            <name>Read Consumed/Provisioned Capacity for {#DDBTABLE} in region {#REGION}</name>
                            <width>900</width>
                            <height>200</height>
                            <yaxismin>0.0000</yaxismin>
                            <yaxismax>100.0000</yaxismax>
                            <show_work_period>1</show_work_period>
                            <show_triggers>1</show_triggers>
                            <type>0</type>
                            <show_legend>1</show_legend>
                            <show_3d>0</show_3d>
                            <percent_left>0.0000</percent_left>
                            <percent_right>0.0000</percent_right>
                            <ymin_type_1>0</ymin_type_1>
                            <ymax_type_1>0</ymax_type_1>
                            <ymin_item_1>0</ymin_item_1>
                            <ymax_item_1>0</ymax_item_1>
                            <graph_items>
                                <graph_item>
                                    <sortorder>0</sortorder>
                                    <drawtype>0</drawtype>
                                    <color>1A7C11</color>
                                    <yaxisside>0</yaxisside>
                                    <calc_fnc>2</calc_fnc>
                                    <type>0</type>
                                    <item>
                                        <host>Template_AWS_Services</host>
                                        <key>cloudwatch.dimension[ConsumedReadCapacityUnits,DynamoDB,Sum,{#DDBTABLE},{#REGION},60]</key>
                                    </item>
                                </graph_item>
                                <graph_item>
                                    <sortorder>1</sortorder>
                                    <drawtype>0</drawtype>
                                    <color>F63100</color>
                                    <yaxisside>0</yaxisside>
                                    <calc_fnc>2</calc_fnc>
                                    <type>0</type>
                                    <item>
                                        <host>Template_AWS_Services</host>
                                        <key>cloudwatch.dimension[ProvisionedReadCapacityUnits,DynamoDB,Maximum,{#DDBTABLE},{#REGION},600]</key>
                                    </item>
                                </graph_item>
                            </graph_items>
                        </graph_prototype>
                        <graph_prototype>
                            <name>Write Consumed/Provisioned Capacity for {#DDBTABLE} in region {#REGION}</name>
                            <width>900</width>
                            <height>200</height>
                            <yaxismin>0.0000</yaxismin>
                            <yaxismax>100.0000</yaxismax>
                            <show_work_period>1</show_work_period>
                            <show_triggers>1</show_triggers>
                            <type>0</type>
                            <show_legend>1</show_legend>
                            <show_3d>0</show_3d>
                            <percent_left>0.0000</percent_left>
                            <percent_right>0.0000</percent_right>
                            <ymin_type_1>0</ymin_type_1>
                            <ymax_type_1>0</ymax_type_1>
                            <ymin_item_1>0</ymin_item_1>
                            <ymax_item_1>0</ymax_item_1>
                            <graph_items>
                                <graph_item>
                                    <sortorder>0</sortorder>
                                    <drawtype>0</drawtype>
                                    <color>1A7C11</color>
                                    <yaxisside>0</yaxisside>
                                    <calc_fnc>2</calc_fnc>
                                    <type>0</type>
                                    <item>
                                        <host>Template_AWS_Services</host>
                                        <key>cloudwatch.dimension[ConsumedWriteCapacityUnits,DynamoDB,Sum,{#DDBTABLE},{#REGION},60]</key>
                                    </item>
                                </graph_item>
                                <graph_item>
                                    <sortorder>1</sortorder>
                                    <drawtype>0</drawtype>
                                    <color>F63100</color>
                                    <yaxisside>0</yaxisside>
                                    <calc_fnc>2</calc_fnc>
                                    <type>0</type>
                                    <item>
                                        <host>Template_AWS_Services</host>
                                        <key>cloudwatch.dimension[ProvisionedWriteCapacityUnits,DynamoDB,Maximum,{#DDBTABLE},{#REGION},600]</key>
                                    </item>
                                </graph_item>
                            </graph_items>
                        </graph_prototype>
                    </graph_prototypes>
                    <host_prototypes/>
                </discovery_rule>
                <discovery_rule>
                    <name>AWS EC2 ELB Discovery</name>
                    <type>7</type>
                    <snmp_community/>
                    <snmp_oid/>
                    <key>cloudwatch.discovery[ELB]</key>
                    <delay>1800</delay>
                    <status>0</status>
                    <allowed_hosts/>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <delay_flex/>
                    <params/>
                    <ipmi_sensor/>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <filter>
                        <evaltype>0</evaltype>
                        <formula/>
                        <conditions/>
                    </filter>
                    <lifetime>30</lifetime>
                    <description>Discovery of Amazon AWS EC2 Elastic Load Balancers.</description>
                    <item_prototypes>
                        <item_prototype>
                            <name>HealthyHostCount on ELB {#LOADBALANCERNAME} in region {#ELBREGION}</name>
                            <type>7</type>
                            <snmp_community/>
                            <multiplier>0</multiplier>
                            <snmp_oid/>
                            <key>cloudwatch.dimension[HealthyHostCount,ELB,Average,{#LOADBALANCERNAME},{#ELBREGION},60]</key>
                            <delay>120</delay>
                            <history>95</history>
                            <trends>1855</trends>
                            <status>0</status>
                            <value_type>0</value_type>
                            <allowed_hosts/>
                            <units>Nodes</units>
                            <delta>0</delta>
                            <snmpv3_contextname/>
                            <snmpv3_securityname/>
                            <snmpv3_securitylevel>0</snmpv3_securitylevel>
                            <snmpv3_authprotocol>0</snmpv3_authprotocol>
                            <snmpv3_authpassphrase/>
                            <snmpv3_privprotocol>0</snmpv3_privprotocol>
                            <snmpv3_privpassphrase/>
                            <formula>1</formula>
                            <delay_flex/>
                            <params/>
                            <ipmi_sensor/>
                            <data_type>0</data_type>
                            <authtype>0</authtype>
                            <username/>
                            <password/>
                            <publickey/>
                            <privatekey/>
                            <port/>
                            <description/>
                            <inventory_link>0</inventory_link>
                            <applications>
                                <application>
                                    <name>AWS ELB</name>
                                </application>
                            </applications>
                            <valuemap/>
                            <logtimefmt/>
                            <application_prototypes/>
                        </item_prototype>
                        <item_prototype>
                            <name>HTTPCode_Backend_4XX on ELB {#LOADBALANCERNAME} in region {#ELBREGION}</name>
                            <type>7</type>
                            <snmp_community/>
                            <multiplier>0</multiplier>
                            <snmp_oid/>
                            <key>cloudwatch.dimension[HTTPCode_Backend_4XX,ELB,Sum,{#LOADBALANCERNAME},{#ELBREGION},60]</key>
                            <delay>120</delay>
                            <history>95</history>
                            <trends>1855</trends>
                            <status>1</status>
                            <value_type>3</value_type>
                            <allowed_hosts/>
                            <units>responses</units>
                            <delta>0</delta>
                            <snmpv3_contextname/>
                            <snmpv3_securityname/>
                            <snmpv3_securitylevel>0</snmpv3_securitylevel>
                            <snmpv3_authprotocol>0</snmpv3_authprotocol>
                            <snmpv3_authpassphrase/>
                            <snmpv3_privprotocol>0</snmpv3_privprotocol>
                            <snmpv3_privpassphrase/>
                            <formula>1</formula>
                            <delay_flex/>
                            <params/>
                            <ipmi_sensor/>
                            <data_type>0</data_type>
                            <authtype>0</authtype>
                            <username/>
                            <password/>
                            <publickey/>
                            <privatekey/>
                            <port/>
                            <description>The number of HTTP response codes generated by registered instances. This does not include any response codes generated by the load balancer.</description>
                            <inventory_link>0</inventory_link>
                            <applications>
                                <application>
                                    <name>AWS ELB</name>
                                </application>
                            </applications>
                            <valuemap/>
                            <logtimefmt/>
                            <application_prototypes/>
                        </item_prototype>
                        <item_prototype>
                            <name>HTTPCode_Backend_5XX on ELB {#LOADBALANCERNAME} in region {#ELBREGION}</name>
                            <type>7</type>
                            <snmp_community/>
                            <multiplier>0</multiplier>
                            <snmp_oid/>
                            <key>cloudwatch.dimension[HTTPCode_Backend_5XX,ELB,Sum,{#LOADBALANCERNAME},{#ELBREGION},120]</key>
                            <delay>120</delay>
                            <history>95</history>
                            <trends>1855</trends>
                            <status>0</status>
                            <value_type>3</value_type>
                            <allowed_hosts/>
                            <units>responses</units>
                            <delta>0</delta>
                            <snmpv3_contextname/>
                            <snmpv3_securityname/>
                            <snmpv3_securitylevel>0</snmpv3_securitylevel>
                            <snmpv3_authprotocol>0</snmpv3_authprotocol>
                            <snmpv3_authpassphrase/>
                            <snmpv3_privprotocol>0</snmpv3_privprotocol>
                            <snmpv3_privpassphrase/>
                            <formula>1</formula>
                            <delay_flex/>
                            <params/>
                            <ipmi_sensor/>
                            <data_type>0</data_type>
                            <authtype>0</authtype>
                            <username/>
                            <password/>
                            <publickey/>
                            <privatekey/>
                            <port/>
                            <description>The number of HTTP response codes generated by registered instances. This does not include any response codes generated by the load balancer.</description>
                            <inventory_link>0</inventory_link>
                            <applications>
                                <application>
                                    <name>AWS ELB</name>
                                </application>
                            </applications>
                            <valuemap/>
                            <logtimefmt/>
                            <application_prototypes/>
                        </item_prototype>
                        <item_prototype>
                            <name>Latency on ELB {#LOADBALANCERNAME} in region {#ELBREGION}</name>
                            <type>7</type>
                            <snmp_community/>
                            <multiplier>0</multiplier>
                            <snmp_oid/>
                            <key>cloudwatch.dimension[Latency,ELB,Average,{#LOADBALANCERNAME},{#ELBREGION},60]</key>
                            <delay>120</delay>
                            <history>95</history>
                            <trends>1855</trends>
                            <status>0</status>
                            <value_type>0</value_type>
                            <allowed_hosts/>
                            <units>seconds</units>
                            <delta>0</delta>
                            <snmpv3_contextname/>
                            <snmpv3_securityname/>
                            <snmpv3_securitylevel>0</snmpv3_securitylevel>
                            <snmpv3_authprotocol>0</snmpv3_authprotocol>
                            <snmpv3_authpassphrase/>
                            <snmpv3_privprotocol>0</snmpv3_privprotocol>
                            <snmpv3_privpassphrase/>
                            <formula>1</formula>
                            <delay_flex/>
                            <params/>
                            <ipmi_sensor/>
                            <data_type>0</data_type>
                            <authtype>0</authtype>
                            <username/>
                            <password/>
                            <publickey/>
                            <privatekey/>
                            <port/>
                            <description>The time elapsed, in seconds, after the request leaves the load balancer until a response is received.</description>
                            <inventory_link>0</inventory_link>
                            <applications>
                                <application>
                                    <name>AWS ELB</name>
                                </application>
                            </applications>
                            <valuemap/>
                            <logtimefmt/>
                            <application_prototypes/>
                        </item_prototype>
                        <item_prototype>
                            <name>RequestCount on ELB {#LOADBALANCERNAME} in region {#ELBREGION}</name>
                            <type>7</type>
                            <snmp_community/>
                            <multiplier>0</multiplier>
                            <snmp_oid/>
                            <key>cloudwatch.dimension[RequestCount,ELB,Sum,{#LOADBALANCERNAME},{#ELBREGION},60]</key>
                            <delay>120</delay>
                            <history>95</history>
                            <trends>1855</trends>
                            <status>1</status>
                            <value_type>3</value_type>
                            <allowed_hosts/>
                            <units>requests</units>
                            <delta>0</delta>
                            <snmpv3_contextname/>
                            <snmpv3_securityname/>
                            <snmpv3_securitylevel>0</snmpv3_securitylevel>
                            <snmpv3_authprotocol>0</snmpv3_authprotocol>
                            <snmpv3_authpassphrase/>
                            <snmpv3_privprotocol>0</snmpv3_privprotocol>
                            <snmpv3_privpassphrase/>
                            <formula>1</formula>
                            <delay_flex/>
                            <params/>
                            <ipmi_sensor/>
                            <data_type>0</data_type>
                            <authtype>0</authtype>
                            <username/>
                            <password/>
                            <publickey/>
                            <privatekey/>
                            <port/>
                            <description>The number of completed requests that were received and routed to the registered instances.</description>
                            <inventory_link>0</inventory_link>
                            <applications>
                                <application>
                                    <name>AWS ELB</name>
                                </application>
                            </applications>
                            <valuemap/>
                            <logtimefmt/>
                            <application_prototypes/>
                        </item_prototype>
                        <item_prototype>
                            <name>SpilloverCount on ELB {#LOADBALANCERNAME} in region {#ELBREGION}</name>
                            <type>7</type>
                            <snmp_community/>
                            <multiplier>0</multiplier>
                            <snmp_oid/>
                            <key>cloudwatch.dimension[SpilloverCount,ELB,Sum,{#LOADBALANCERNAME},{#ELBREGION},120]</key>
                            <delay>120</delay>
                            <history>95</history>
                            <trends>1855</trends>
                            <status>0</status>
                            <value_type>3</value_type>
                            <allowed_hosts/>
                            <units>requests</units>
                            <delta>0</delta>
                            <snmpv3_contextname/>
                            <snmpv3_securityname/>
                            <snmpv3_securitylevel>0</snmpv3_securitylevel>
                            <snmpv3_authprotocol>0</snmpv3_authprotocol>
                            <snmpv3_authpassphrase/>
                            <snmpv3_privprotocol>0</snmpv3_privprotocol>
                            <snmpv3_privpassphrase/>
                            <formula>1</formula>
                            <delay_flex/>
                            <params/>
                            <ipmi_sensor/>
                            <data_type>0</data_type>
                            <authtype>0</authtype>
                            <username/>
                            <password/>
                            <publickey/>
                            <privatekey/>
                            <port/>
                            <description>The total number of requests that were rejected because the queue was full.</description>
                            <inventory_link>0</inventory_link>
                            <applications>
                                <application>
                                    <name>AWS ELB</name>
                                </application>
                            </applications>
                            <valuemap/>
                            <logtimefmt/>
                            <application_prototypes/>
                        </item_prototype>
                        <item_prototype>
                            <name>UnHealthyHostCount on ELB {#LOADBALANCERNAME} in region {#ELBREGION}</name>
                            <type>7</type>
                            <snmp_community/>
                            <multiplier>0</multiplier>
                            <snmp_oid/>
                            <key>cloudwatch.dimension[UnHealthyHostCount,ELB,Average,{#LOADBALANCERNAME},{#ELBREGION},60]</key>
                            <delay>120</delay>
                            <history>95</history>
                            <trends>1855</trends>
                            <status>0</status>
                            <value_type>0</value_type>
                            <allowed_hosts/>
                            <units>Nodes</units>
                            <delta>0</delta>
                            <snmpv3_contextname/>
                            <snmpv3_securityname/>
                            <snmpv3_securitylevel>0</snmpv3_securitylevel>
                            <snmpv3_authprotocol>0</snmpv3_authprotocol>
                            <snmpv3_authpassphrase/>
                            <snmpv3_privprotocol>0</snmpv3_privprotocol>
                            <snmpv3_privpassphrase/>
                            <formula>1</formula>
                            <delay_flex/>
                            <params/>
                            <ipmi_sensor/>
                            <data_type>0</data_type>
                            <authtype>0</authtype>
                            <username/>
                            <password/>
                            <publickey/>
                            <privatekey/>
                            <port/>
                            <description>The number of unhealthy instances in each Availability Zone. An instance is considered unhealthy if it exceeds the unhealthy threshold configured for the health checks. If cross-zone load balancing is enabled, the number of unhealthy instances is calculated across all Availability Zones.</description>
                            <inventory_link>0</inventory_link>
                            <applications>
                                <application>
                                    <name>AWS ELB</name>
                                </application>
                            </applications>
                            <valuemap/>
                            <logtimefmt/>
                            <application_prototypes/>
                        </item_prototype>
                    </item_prototypes>
                    <trigger_prototypes>
                        <trigger_prototype>
                            <expression>{Template_AWS_Services:cloudwatch.dimension[HealthyHostCount,ELB,Average,{#LOADBALANCERNAME},{#ELBREGION},60].nodata(600)}=1</expression>
                            <name>Cannot collect data for ELB {#LOADBALANCERNAME} in region {#ELBREGION}</name>
                            <url/>
                            <status>0</status>
                            <priority>3</priority>
                            <description>Alert if there is no data collected for 6 minutes.</description>
                            <type>0</type>
                            <dependencies/>
                        </trigger_prototype>
                        <trigger_prototype>
                            <expression>{Template_AWS_Services:cloudwatch.dimension[HTTPCode_Backend_5XX,ELB,Sum,{#LOADBALANCERNAME},{#ELBREGION},120].sum(5m)}&gt;100 or ({TRIGGER.VALUE}=1 and {Template_AWS_Services:cloudwatch.dimension[HTTPCode_Backend_5XX,ELB,Sum,{#LOADBALANCERNAME},{#ELBREGION},120].sum(10m)}&gt;0)</expression>
                            <name>HTTP 5xx backend error codes on ELB {#LOADBALANCERNAME} in region {#ELBREGION}</name>
                            <url/>
                            <status>0</status>
                            <priority>4</priority>
                            <description>Alert if HTTP 5xx backend codes</description>
                            <type>0</type>
                            <dependencies/>
                        </trigger_prototype>
                        <trigger_prototype>
                            <expression>{Template_AWS_Services:cloudwatch.dimension[HTTPCode_Backend_5XX,ELB,Sum,{#LOADBALANCERNAME},{#ELBREGION},120].sum(10m)}&gt;10 or ({TRIGGER.VALUE}=1 and {Template_AWS_Services:cloudwatch.dimension[HTTPCode_Backend_5XX,ELB,Sum,{#LOADBALANCERNAME},{#ELBREGION},120].sum(10m)}&gt;0)</expression>
                            <name>HTTP 5xx backend error codes on ELB {#LOADBALANCERNAME} in region {#ELBREGION}</name>
                            <url/>
                            <status>0</status>
                            <priority>3</priority>
                            <description>Alert if HTTP 5xx backend codes</description>
                            <type>0</type>
                            <dependencies/>
                        </trigger_prototype>
                        <trigger_prototype>
                            <expression>{Template_AWS_Services:cloudwatch.dimension[Latency,ELB,Average,{#LOADBALANCERNAME},{#ELBREGION},60].min(5m)}&gt;2 or ({TRIGGER.VALUE}=1 and {Template_AWS_Services:cloudwatch.dimension[Latency,ELB,Average,{#LOADBALANCERNAME},{#ELBREGION},60].max(10m)}&gt;1)</expression>
                            <name>Latency above 2sec on ELB {#LOADBALANCERNAME} in region {#ELBREGION}</name>
                            <url/>
                            <status>0</status>
                            <priority>4</priority>
                            <description>If the latency is higher than 2 seconds for 5 minutes, alert.</description>
                            <type>0</type>
                            <dependencies/>
                        </trigger_prototype>
                        <trigger_prototype>
                            <expression>{Template_AWS_Services:cloudwatch.dimension[UnHealthyHostCount,ELB,Average,{#LOADBALANCERNAME},{#ELBREGION},60].min(5m)}&gt;0.5*({Template_AWS_Services:cloudwatch.dimension[UnHealthyHostCount,ELB,Average,{#LOADBALANCERNAME},{#ELBREGION},60].last()}+{Template_AWS_Services:cloudwatch.dimension[HealthyHostCount,ELB,Average,{#LOADBALANCERNAME},{#ELBREGION},60].last()}) or ({TRIGGER.VALUE}=1 and {Template_AWS_Services:cloudwatch.dimension[UnHealthyHostCount,ELB,Average,{#LOADBALANCERNAME},{#ELBREGION},60].max(30m)}&gt;0)</expression>
                            <name>More than half hosts unhealthy on ELB {#LOADBALANCERNAME} in region {#ELBREGION}</name>
                            <url/>
                            <status>0</status>
                            <priority>3</priority>
                            <description>Trigger when unhealthy hosts is more than half then total hosts.</description>
                            <type>0</type>
                            <dependencies/>
                        </trigger_prototype>
                        <trigger_prototype>
                            <expression>{Template_AWS_Services:cloudwatch.dimension[SpilloverCount,ELB,Sum,{#LOADBALANCERNAME},{#ELBREGION},120].sum(10m)}&gt;10 or ({TRIGGER.VALUE}=1 and {Template_AWS_Services:cloudwatch.dimension[SpilloverCount,ELB,Sum,{#LOADBALANCERNAME},{#ELBREGION},120].sum(10m)}&gt;0)</expression>
                            <name>Spillover count above zero on ELB {#LOADBALANCERNAME} in region {#ELBREGION}</name>
                            <url/>
                            <status>0</status>
                            <priority>3</priority>
                            <description>Alert if spillover count above zero</description>
                            <type>0</type>
                            <dependencies/>
                        </trigger_prototype>
                        <trigger_prototype>
                            <expression>{Template_AWS_Services:cloudwatch.dimension[UnHealthyHostCount,ELB,Average,{#LOADBALANCERNAME},{#ELBREGION},60].last()}&gt;1</expression>
                            <name>Unhealthy hosts on ELB {#LOADBALANCERNAME} in region {#ELBREGION}</name>
                            <url/>
                            <status>0</status>
                            <priority>3</priority>
                            <description>Unhealthy hosts behind ELB detected.</description>
                            <type>0</type>
                            <dependencies/>
                        </trigger_prototype>
                        <trigger_prototype>
                            <expression>{Template_AWS_Services:cloudwatch.dimension[HealthyHostCount,ELB,Average,{#LOADBALANCERNAME},{#ELBREGION},60].max(5m)}&lt;1 or ({TRIGGER.VALUE}=1 and {Template_AWS_Services:cloudwatch.dimension[HealthyHostCount,ELB,Average,{#LOADBALANCERNAME},{#ELBREGION},60].min(15m)}&lt;1)</expression>
                            <name>Zero healthy hosts on ELB {#LOADBALANCERNAME} in region {#ELBREGION}</name>
                            <url/>
                            <status>0</status>
                            <priority>4</priority>
                            <description>Trigger zero healthy hosts.</description>
                            <type>0</type>
                            <dependencies/>
                        </trigger_prototype>
                    </trigger_prototypes>
                    <graph_prototypes/>
                    <host_prototypes/>
                </discovery_rule>
                <discovery_rule>
                    <name>AWS RDS Discovery</name>
                    <type>7</type>
                    <snmp_community/>
                    <snmp_oid/>
                    <key>cloudwatch.discovery[RDS]</key>
                    <delay>1800</delay>
                    <status>0</status>
                    <allowed_hosts/>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <delay_flex/>
                    <params/>
                    <ipmi_sensor/>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <filter>
                        <evaltype>0</evaltype>
                        <formula/>
                        <conditions/>
                    </filter>
                    <lifetime>7</lifetime>
                    <description>Discovery of Amazon AWS RDS instances.</description>
                    <item_prototypes>
                        <item_prototype>
                            <name>RDS CPUUtilization average on RDS instance {#RDSINSTANCEID} in region {#RDSREGION}</name>
                            <type>7</type>
                            <snmp_community/>
                            <multiplier>0</multiplier>
                            <snmp_oid/>
                            <key>cloudwatch.dimension[CPUUtilization,RDS,Average,{#RDSINSTANCEID},{#RDSREGION},60]</key>
                            <delay>60</delay>
                            <history>90</history>
                            <trends>365</trends>
                            <status>0</status>
                            <value_type>0</value_type>
                            <allowed_hosts/>
                            <units>%</units>
                            <delta>0</delta>
                            <snmpv3_contextname/>
                            <snmpv3_securityname/>
                            <snmpv3_securitylevel>0</snmpv3_securitylevel>
                            <snmpv3_authprotocol>0</snmpv3_authprotocol>
                            <snmpv3_authpassphrase/>
                            <snmpv3_privprotocol>0</snmpv3_privprotocol>
                            <snmpv3_privpassphrase/>
                            <formula>1</formula>
                            <delay_flex/>
                            <params/>
                            <ipmi_sensor/>
                            <data_type>0</data_type>
                            <authtype>0</authtype>
                            <username/>
                            <password/>
                            <publickey/>
                            <privatekey/>
                            <port/>
                            <description/>
                            <inventory_link>0</inventory_link>
                            <applications>
                                <application>
                                    <name>AWS RDS</name>
                                </application>
                            </applications>
                            <valuemap/>
                            <logtimefmt/>
                            <application_prototypes/>
                        </item_prototype>
                        <item_prototype>
                            <name>RDS DatabaseConnections average on RDS instance {#RDSINSTANCEID} in region {#RDSREGION}</name>
                            <type>7</type>
                            <snmp_community/>
                            <multiplier>0</multiplier>
                            <snmp_oid/>
                            <key>cloudwatch.dimension[DatabaseConnections,RDS,Average,{#RDSINSTANCEID},{#RDSREGION},60]</key>
                            <delay>120</delay>
                            <history>90</history>
                            <trends>365</trends>
                            <status>0</status>
                            <value_type>3</value_type>
                            <allowed_hosts/>
                            <units>cons</units>
                            <delta>0</delta>
                            <snmpv3_contextname/>
                            <snmpv3_securityname/>
                            <snmpv3_securitylevel>0</snmpv3_securitylevel>
                            <snmpv3_authprotocol>0</snmpv3_authprotocol>
                            <snmpv3_authpassphrase/>
                            <snmpv3_privprotocol>0</snmpv3_privprotocol>
                            <snmpv3_privpassphrase/>
                            <formula>1</formula>
                            <delay_flex/>
                            <params/>
                            <ipmi_sensor/>
                            <data_type>0</data_type>
                            <authtype>0</authtype>
                            <username/>
                            <password/>
                            <publickey/>
                            <privatekey/>
                            <port/>
                            <description/>
                            <inventory_link>0</inventory_link>
                            <applications>
                                <application>
                                    <name>AWS RDS</name>
                                </application>
                            </applications>
                            <valuemap/>
                            <logtimefmt/>
                            <application_prototypes/>
                        </item_prototype>
                        <item_prototype>
                            <name>RDS FreeableMemory average on RDS instance {#RDSINSTANCEID} in region {#RDSREGION}</name>
                            <type>7</type>
                            <snmp_community/>
                            <multiplier>0</multiplier>
                            <snmp_oid/>
                            <key>cloudwatch.dimension[FreeableMemory,RDS,Average,{#RDSINSTANCEID},{#RDSREGION},60]</key>
                            <delay>120</delay>
                            <history>90</history>
                            <trends>365</trends>
                            <status>0</status>
                            <value_type>0</value_type>
                            <allowed_hosts/>
                            <units>B</units>
                            <delta>0</delta>
                            <snmpv3_contextname/>
                            <snmpv3_securityname/>
                            <snmpv3_securitylevel>0</snmpv3_securitylevel>
                            <snmpv3_authprotocol>0</snmpv3_authprotocol>
                            <snmpv3_authpassphrase/>
                            <snmpv3_privprotocol>0</snmpv3_privprotocol>
                            <snmpv3_privpassphrase/>
                            <formula>1</formula>
                            <delay_flex/>
                            <params/>
                            <ipmi_sensor/>
                            <data_type>0</data_type>
                            <authtype>0</authtype>
                            <username/>
                            <password/>
                            <publickey/>
                            <privatekey/>
                            <port/>
                            <description/>
                            <inventory_link>0</inventory_link>
                            <applications>
                                <application>
                                    <name>AWS RDS</name>
                                </application>
                            </applications>
                            <valuemap/>
                            <logtimefmt/>
                            <application_prototypes/>
                        </item_prototype>
                        <item_prototype>
                            <name>RDS FreeStorageSpace average on RDS instance {#RDSINSTANCEID} in region {#RDSREGION}</name>
                            <type>7</type>
                            <snmp_community/>
                            <multiplier>0</multiplier>
                            <snmp_oid/>
                            <key>cloudwatch.dimension[FreeStorageSpace,RDS,Average,{#RDSINSTANCEID},{#RDSREGION},60]</key>
                            <delay>120</delay>
                            <history>90</history>
                            <trends>365</trends>
                            <status>0</status>
                            <value_type>3</value_type>
                            <allowed_hosts/>
                            <units>B</units>
                            <delta>0</delta>
                            <snmpv3_contextname/>
                            <snmpv3_securityname/>
                            <snmpv3_securitylevel>0</snmpv3_securitylevel>
                            <snmpv3_authprotocol>0</snmpv3_authprotocol>
                            <snmpv3_authpassphrase/>
                            <snmpv3_privprotocol>0</snmpv3_privprotocol>
                            <snmpv3_privpassphrase/>
                            <formula>1</formula>
                            <delay_flex/>
                            <params/>
                            <ipmi_sensor/>
                            <data_type>0</data_type>
                            <authtype>0</authtype>
                            <username/>
                            <password/>
                            <publickey/>
                            <privatekey/>
                            <port/>
                            <description/>
                            <inventory_link>0</inventory_link>
                            <applications>
                                <application>
                                    <name>AWS RDS</name>
                                </application>
                            </applications>
                            <valuemap/>
                            <logtimefmt/>
                            <application_prototypes/>
                        </item_prototype>
                        <item_prototype>
                            <name>RDS ReadIOPS average on RDS instance {#RDSINSTANCEID} in region {#RDSREGION}</name>
                            <type>7</type>
                            <snmp_community/>
                            <multiplier>0</multiplier>
                            <snmp_oid/>
                            <key>cloudwatch.dimension[ReadIOPS,RDS,Average,{#RDSINSTANCEID},{#RDSREGION},60]</key>
                            <delay>120</delay>
                            <history>90</history>
                            <trends>365</trends>
                            <status>0</status>
                            <value_type>0</value_type>
                            <allowed_hosts/>
                            <units>op/s</units>
                            <delta>0</delta>
                            <snmpv3_contextname/>
                            <snmpv3_securityname/>
                            <snmpv3_securitylevel>0</snmpv3_securitylevel>
                            <snmpv3_authprotocol>0</snmpv3_authprotocol>
                            <snmpv3_authpassphrase/>
                            <snmpv3_privprotocol>0</snmpv3_privprotocol>
                            <snmpv3_privpassphrase/>
                            <formula>1</formula>
                            <delay_flex/>
                            <params/>
                            <ipmi_sensor/>
                            <data_type>0</data_type>
                            <authtype>0</authtype>
                            <username/>
                            <password/>
                            <publickey/>
                            <privatekey/>
                            <port/>
                            <description/>
                            <inventory_link>0</inventory_link>
                            <applications>
                                <application>
                                    <name>AWS RDS</name>
                                </application>
                            </applications>
                            <valuemap/>
                            <logtimefmt/>
                            <application_prototypes/>
                        </item_prototype>
                        <item_prototype>
                            <name>RDS ReadLatency average on RDS instance {#RDSINSTANCEID} in region {#RDSREGION}</name>
                            <type>7</type>
                            <snmp_community/>
                            <multiplier>0</multiplier>
                            <snmp_oid/>
                            <key>cloudwatch.dimension[ReadLatency,RDS,Average,{#RDSINSTANCEID},{#RDSREGION},60]</key>
                            <delay>60</delay>
                            <history>90</history>
                            <trends>365</trends>
                            <status>0</status>
                            <value_type>0</value_type>
                            <allowed_hosts/>
                            <units>sec</units>
                            <delta>0</delta>
                            <snmpv3_contextname/>
                            <snmpv3_securityname/>
                            <snmpv3_securitylevel>0</snmpv3_securitylevel>
                            <snmpv3_authprotocol>0</snmpv3_authprotocol>
                            <snmpv3_authpassphrase/>
                            <snmpv3_privprotocol>0</snmpv3_privprotocol>
                            <snmpv3_privpassphrase/>
                            <formula>1</formula>
                            <delay_flex/>
                            <params/>
                            <ipmi_sensor/>
                            <data_type>0</data_type>
                            <authtype>0</authtype>
                            <username/>
                            <password/>
                            <publickey/>
                            <privatekey/>
                            <port/>
                            <description/>
                            <inventory_link>0</inventory_link>
                            <applications>
                                <application>
                                    <name>AWS RDS</name>
                                </application>
                            </applications>
                            <valuemap/>
                            <logtimefmt/>
                            <application_prototypes/>
                        </item_prototype>
                        <item_prototype>
                            <name>RDS ReadThroughput average on RDS instance {#RDSINSTANCEID} in region {#RDSREGION}</name>
                            <type>7</type>
                            <snmp_community/>
                            <multiplier>0</multiplier>
                            <snmp_oid/>
                            <key>cloudwatch.dimension[ReadThroughput,RDS,Average,{#RDSINSTANCEID},{#RDSREGION},60]</key>
                            <delay>120</delay>
                            <history>90</history>
                            <trends>365</trends>
                            <status>0</status>
                            <value_type>0</value_type>
                            <allowed_hosts/>
                            <units>B/s</units>
                            <delta>0</delta>
                            <snmpv3_contextname/>
                            <snmpv3_securityname/>
                            <snmpv3_securitylevel>0</snmpv3_securitylevel>
                            <snmpv3_authprotocol>0</snmpv3_authprotocol>
                            <snmpv3_authpassphrase/>
                            <snmpv3_privprotocol>0</snmpv3_privprotocol>
                            <snmpv3_privpassphrase/>
                            <formula>1</formula>
                            <delay_flex/>
                            <params/>
                            <ipmi_sensor/>
                            <data_type>0</data_type>
                            <authtype>0</authtype>
                            <username/>
                            <password/>
                            <publickey/>
                            <privatekey/>
                            <port/>
                            <description/>
                            <inventory_link>0</inventory_link>
                            <applications>
                                <application>
                                    <name>AWS RDS</name>
                                </application>
                            </applications>
                            <valuemap/>
                            <logtimefmt/>
                            <application_prototypes/>
                        </item_prototype>
                        <item_prototype>
                            <name>RDS ReplicaLag average on RDS instance {#RDSINSTANCEID} in region {#RDSREGION}</name>
                            <type>7</type>
                            <snmp_community/>
                            <multiplier>0</multiplier>
                            <snmp_oid/>
                            <key>cloudwatch.dimension[ReplicaLag,RDS,Average,{#RDSINSTANCEID},{#RDSREGION},60]</key>
                            <delay>120</delay>
                            <history>90</history>
                            <trends>365</trends>
                            <status>0</status>
                            <value_type>0</value_type>
                            <allowed_hosts/>
                            <units>ms</units>
                            <delta>0</delta>
                            <snmpv3_contextname/>
                            <snmpv3_securityname/>
                            <snmpv3_securitylevel>0</snmpv3_securitylevel>
                            <snmpv3_authprotocol>0</snmpv3_authprotocol>
                            <snmpv3_authpassphrase/>
                            <snmpv3_privprotocol>0</snmpv3_privprotocol>
                            <snmpv3_privpassphrase/>
                            <formula>1</formula>
                            <delay_flex/>
                            <params/>
                            <ipmi_sensor/>
                            <data_type>0</data_type>
                            <authtype>0</authtype>
                            <username/>
                            <password/>
                            <publickey/>
                            <privatekey/>
                            <port/>
                            <description/>
                            <inventory_link>0</inventory_link>
                            <applications>
                                <application>
                                    <name>AWS RDS</name>
                                </application>
                            </applications>
                            <valuemap/>
                            <logtimefmt/>
                            <application_prototypes/>
                        </item_prototype>
                        <item_prototype>
                            <name>RDS SwapUsage average on RDS instance {#RDSINSTANCEID} in region {#RDSREGION}</name>
                            <type>7</type>
                            <snmp_community/>
                            <multiplier>0</multiplier>
                            <snmp_oid/>
                            <key>cloudwatch.dimension[SwapUsage,RDS,Average,{#RDSINSTANCEID},{#RDSREGION},60]</key>
                            <delay>120</delay>
                            <history>90</history>
                            <trends>365</trends>
                            <status>0</status>
                            <value_type>3</value_type>
                            <allowed_hosts/>
                            <units>B</units>
                            <delta>0</delta>
                            <snmpv3_contextname/>
                            <snmpv3_securityname/>
                            <snmpv3_securitylevel>0</snmpv3_securitylevel>
                            <snmpv3_authprotocol>0</snmpv3_authprotocol>
                            <snmpv3_authpassphrase/>
                            <snmpv3_privprotocol>0</snmpv3_privprotocol>
                            <snmpv3_privpassphrase/>
                            <formula>1</formula>
                            <delay_flex/>
                            <params/>
                            <ipmi_sensor/>
                            <data_type>0</data_type>
                            <authtype>0</authtype>
                            <username/>
                            <password/>
                            <publickey/>
                            <privatekey/>
                            <port/>
                            <description/>
                            <inventory_link>0</inventory_link>
                            <applications>
                                <application>
                                    <name>AWS RDS</name>
                                </application>
                            </applications>
                            <valuemap/>
                            <logtimefmt/>
                            <application_prototypes/>
                        </item_prototype>
                        <item_prototype>
                            <name>RDS WriteIOPs average on RDS instance {#RDSINSTANCEID} in region {#RDSREGION}</name>
                            <type>7</type>
                            <snmp_community/>
                            <multiplier>0</multiplier>
                            <snmp_oid/>
                            <key>cloudwatch.dimension[WriteIOPS,RDS,Average,{#RDSINSTANCEID},{#RDSREGION},60]</key>
                            <delay>120</delay>
                            <history>90</history>
                            <trends>365</trends>
                            <status>0</status>
                            <value_type>0</value_type>
                            <allowed_hosts/>
                            <units>op/s</units>
                            <delta>0</delta>
                            <snmpv3_contextname/>
                            <snmpv3_securityname/>
                            <snmpv3_securitylevel>0</snmpv3_securitylevel>
                            <snmpv3_authprotocol>0</snmpv3_authprotocol>
                            <snmpv3_authpassphrase/>
                            <snmpv3_privprotocol>0</snmpv3_privprotocol>
                            <snmpv3_privpassphrase/>
                            <formula>1</formula>
                            <delay_flex/>
                            <params/>
                            <ipmi_sensor/>
                            <data_type>0</data_type>
                            <authtype>0</authtype>
                            <username/>
                            <password/>
                            <publickey/>
                            <privatekey/>
                            <port/>
                            <description/>
                            <inventory_link>0</inventory_link>
                            <applications>
                                <application>
                                    <name>AWS RDS</name>
                                </application>
                            </applications>
                            <valuemap/>
                            <logtimefmt/>
                            <application_prototypes/>
                        </item_prototype>
                        <item_prototype>
                            <name>RDS WriteLatency average on RDS instance {#RDSINSTANCEID} in region {#RDSREGION}</name>
                            <type>7</type>
                            <snmp_community/>
                            <multiplier>0</multiplier>
                            <snmp_oid/>
                            <key>cloudwatch.dimension[WriteLatency,RDS,Average,{#RDSINSTANCEID},{#RDSREGION},60]</key>
                            <delay>60</delay>
                            <history>90</history>
                            <trends>365</trends>
                            <status>0</status>
                            <value_type>0</value_type>
                            <allowed_hosts/>
                            <units>sec</units>
                            <delta>0</delta>
                            <snmpv3_contextname/>
                            <snmpv3_securityname/>
                            <snmpv3_securitylevel>0</snmpv3_securitylevel>
                            <snmpv3_authprotocol>0</snmpv3_authprotocol>
                            <snmpv3_authpassphrase/>
                            <snmpv3_privprotocol>0</snmpv3_privprotocol>
                            <snmpv3_privpassphrase/>
                            <formula>1</formula>
                            <delay_flex/>
                            <params/>
                            <ipmi_sensor/>
                            <data_type>0</data_type>
                            <authtype>0</authtype>
                            <username/>
                            <password/>
                            <publickey/>
                            <privatekey/>
                            <port/>
                            <description/>
                            <inventory_link>0</inventory_link>
                            <applications>
                                <application>
                                    <name>AWS RDS</name>
                                </application>
                            </applications>
                            <valuemap/>
                            <logtimefmt/>
                            <application_prototypes/>
                        </item_prototype>
                        <item_prototype>
                            <name>RDS WriteThroughput average on RDS instance {#RDSINSTANCEID} in region {#RDSREGION}</name>
                            <type>7</type>
                            <snmp_community/>
                            <multiplier>0</multiplier>
                            <snmp_oid/>
                            <key>cloudwatch.dimension[WriteThroughput,RDS,Average,{#RDSINSTANCEID},{#RDSREGION},60]</key>
                            <delay>120</delay>
                            <history>90</history>
                            <trends>365</trends>
                            <status>0</status>
                            <value_type>0</value_type>
                            <allowed_hosts/>
                            <units>B/s</units>
                            <delta>0</delta>
                            <snmpv3_contextname/>
                            <snmpv3_securityname/>
                            <snmpv3_securitylevel>0</snmpv3_securitylevel>
                            <snmpv3_authprotocol>0</snmpv3_authprotocol>
                            <snmpv3_authpassphrase/>
                            <snmpv3_privprotocol>0</snmpv3_privprotocol>
                            <snmpv3_privpassphrase/>
                            <formula>1</formula>
                            <delay_flex/>
                            <params/>
                            <ipmi_sensor/>
                            <data_type>0</data_type>
                            <authtype>0</authtype>
                            <username/>
                            <password/>
                            <publickey/>
                            <privatekey/>
                            <port/>
                            <description/>
                            <inventory_link>0</inventory_link>
                            <applications>
                                <application>
                                    <name>AWS RDS</name>
                                </application>
                            </applications>
                            <valuemap/>
                            <logtimefmt/>
                            <application_prototypes/>
                        </item_prototype>
                    </item_prototypes>
                    <trigger_prototypes>
                        <trigger_prototype>
                            <expression>{Template_AWS_Services:cloudwatch.dimension[WriteLatency,RDS,Average,{#RDSINSTANCEID},{#RDSREGION},60].avg(600)}&gt;0.05</expression>
                            <name>Average Write latency above 50ms on RDS instance {#RDSINSTANCEID} in region {#RDSREGION}</name>
                            <url/>
                            <status>0</status>
                            <priority>3</priority>
                            <description>Trigger if average write latency is above 50ms</description>
                            <type>0</type>
                            <dependencies/>
                        </trigger_prototype>
                        <trigger_prototype>
                            <expression>{Template_AWS_Services:cloudwatch.dimension[CPUUtilization,RDS,Average,{#RDSINSTANCEID},{#RDSREGION},60].nodata(600)}=1</expression>
                            <name>Cannot collect data from RDS instance {#RDSINSTANCEID} in region {#RDSREGION}</name>
                            <url/>
                            <status>0</status>
                            <priority>3</priority>
                            <description>Alert if no data collected for 10 minutes.</description>
                            <type>0</type>
                            <dependencies/>
                        </trigger_prototype>
                        <trigger_prototype>
                            <expression>{Template_AWS_Services:cloudwatch.dimension[CPUUtilization,RDS,Average,{#RDSINSTANCEID},{#RDSREGION},60].min(300)}&gt;90</expression>
                            <name>CPU utilization above 90% for 5 minutes on RDS instance {#RDSINSTANCEID} in region {#RDSREGION}</name>
                            <url/>
                            <status>0</status>
                            <priority>4</priority>
                            <description>Trigger if CPU utilization above 90% for 5 minutes</description>
                            <type>0</type>
                            <dependencies/>
                        </trigger_prototype>
                        <trigger_prototype>
                            <expression>{Template_AWS_Services:cloudwatch.dimension[FreeStorageSpace,RDS,Average,{#RDSINSTANCEID},{#RDSREGION},60].forecast(1h,,30m)}&lt;2G</expression>
                            <name>Forecast, free disk storage will be less then 2 GB on RDS instance {#RDSINSTANCEID} in region {#RDSREGION} in 30m</name>
                            <url/>
                            <status>0</status>
                            <priority>4</priority>
                            <description>Trigger Free Disk Storage less than 2 GB for more than 10 minutes.</description>
                            <type>0</type>
                            <dependencies/>
                        </trigger_prototype>
                        <trigger_prototype>
                            <expression>{Template_AWS_Services:cloudwatch.dimension[FreeableMemory,RDS,Average,{#RDSINSTANCEID},{#RDSREGION},60].max(600)}&lt;300M</expression>
                            <name>Freeable memory less than 300M on RDS instance {#RDSINSTANCEID} in region {#RDSREGION}</name>
                            <url/>
                            <status>0</status>
                            <priority>4</priority>
                            <description>Trigger if freeable memory less than 300MB for 10 minutes.</description>
                            <type>0</type>
                            <dependencies/>
                        </trigger_prototype>
                        <trigger_prototype>
                            <expression>{Template_AWS_Services:cloudwatch.dimension[FreeStorageSpace,RDS,Average,{#RDSINSTANCEID},{#RDSREGION},60].max(600)}&lt;2G</expression>
                            <name>Free Disk Storage less than 2 GB on RDS instance {#RDSINSTANCEID} in region {#RDSREGION}</name>
                            <url/>
                            <status>0</status>
                            <priority>4</priority>
                            <description>Trigger Free Disk Storage less than 2 GB for more than 10 minutes.</description>
                            <type>0</type>
                            <dependencies/>
                        </trigger_prototype>
                        <trigger_prototype>
                            <expression>{Template_AWS_Services:cloudwatch.dimension[DatabaseConnections,RDS,Average,{#RDSINSTANCEID},{#RDSREGION},60].last()}&gt;500</expression>
                            <name>More than 500 DB connections on RDS instance {#RDSINSTANCEID} in region {#RDSREGION}</name>
                            <url/>
                            <status>0</status>
                            <priority>3</priority>
                            <description>Trigger number of DB connections above 500.</description>
                            <type>0</type>
                            <dependencies/>
                        </trigger_prototype>
                        <trigger_prototype>
                            <expression>{Template_AWS_Services:cloudwatch.dimension[ReadLatency,RDS,Average,{#RDSINSTANCEID},{#RDSREGION},60].min(300)}&gt;0.1</expression>
                            <name>Read latency above 100ms for 5min on RDS instance {#RDSINSTANCEID} in region {#RDSREGION}</name>
                            <url/>
                            <status>0</status>
                            <priority>4</priority>
                            <description>Trigger if read latency above 100ms for 5 minutes</description>
                            <type>0</type>
                            <dependencies/>
                        </trigger_prototype>
                        <trigger_prototype>
                            <expression>{Template_AWS_Services:cloudwatch.dimension[ReplicaLag,RDS,Average,{#RDSINSTANCEID},{#RDSREGION},60].last()}&gt;5000</expression>
                            <name>Replica Lag is greater than 5 second on RDS instance {#RDSINSTANCEID} in region {#RDSREGION}</name>
                            <url/>
                            <status>0</status>
                            <priority>4</priority>
                            <description>Trigger if is greater than 5 second</description>
                            <type>0</type>
                            <dependencies/>
                        </trigger_prototype>
                        <trigger_prototype>
                            <expression>{Template_AWS_Services:cloudwatch.dimension[SwapUsage,RDS,Average,{#RDSINSTANCEID},{#RDSREGION},60].last()}&gt;1G</expression>
                            <name>Swap usage greater than 1GB on RDS instance {#RDSINSTANCEID} in region {#RDSREGION}</name>
                            <url/>
                            <status>0</status>
                            <priority>4</priority>
                            <description>Trigger if swap usage above 1G.</description>
                            <type>0</type>
                            <dependencies/>
                        </trigger_prototype>
                        <trigger_prototype>
                            <expression>{Template_AWS_Services:cloudwatch.dimension[WriteLatency,RDS,Average,{#RDSINSTANCEID},{#RDSREGION},60].min(300)}&gt;0.2</expression>
                            <name>Write latency above 200ms for 5min on RDS instance {#RDSINSTANCEID} in region {#RDSREGION}</name>
                            <url/>
                            <status>0</status>
                            <priority>4</priority>
                            <description>Trigger if write latency above 200ms for 5min</description>
                            <type>0</type>
                            <dependencies/>
                        </trigger_prototype>
                    </trigger_prototypes>
                    <graph_prototypes/>
                    <host_prototypes/>
                </discovery_rule>
                <discovery_rule>
                    <name>AWS EC2 Summary Discovery</name>
                    <type>7</type>
                    <snmp_community/>
                    <snmp_oid/>
                    <key>ec2_summary.discovery</key>
                    <delay>1800</delay>
                    <status>0</status>
                    <allowed_hosts/>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <delay_flex/>
                    <params/>
                    <ipmi_sensor/>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <filter>
                        <evaltype>0</evaltype>
                        <formula/>
                        <conditions/>
                    </filter>
                    <lifetime>7</lifetime>
                    <description>Discover regions that have running instances.</description>
                    <item_prototypes>
                        <item_prototype>
                            <name>Completed Tasks Instances in Region {#REGION}</name>
                            <type>7</type>
                            <snmp_community/>
                            <multiplier>0</multiplier>
                            <snmp_oid/>
                            <key>ec2_summary[completed,{#REGION}]</key>
                            <delay>900</delay>
                            <history>90</history>
                            <trends>365</trends>
                            <status>0</status>
                            <value_type>3</value_type>
                            <allowed_hosts/>
                            <units>Instances</units>
                            <delta>0</delta>
                            <snmpv3_contextname/>
                            <snmpv3_securityname/>
                            <snmpv3_securitylevel>0</snmpv3_securitylevel>
                            <snmpv3_authprotocol>0</snmpv3_authprotocol>
                            <snmpv3_authpassphrase/>
                            <snmpv3_privprotocol>0</snmpv3_privprotocol>
                            <snmpv3_privpassphrase/>
                            <formula>1</formula>
                            <delay_flex/>
                            <params/>
                            <ipmi_sensor/>
                            <data_type>0</data_type>
                            <authtype>0</authtype>
                            <username/>
                            <password/>
                            <publickey/>
                            <privatekey/>
                            <port/>
                            <description/>
                            <inventory_link>0</inventory_link>
                            <applications>
                                <application>
                                    <name>EC2 Summary</name>
                                </application>
                            </applications>
                            <valuemap/>
                            <logtimefmt/>
                            <application_prototypes/>
                        </item_prototype>
                        <item_prototype>
                            <name>Status FAIL Instances in Region {#REGION}</name>
                            <type>7</type>
                            <snmp_community/>
                            <multiplier>0</multiplier>
                            <snmp_oid/>
                            <key>ec2_summary[fail,{#REGION}]</key>
                            <delay>900</delay>
                            <history>90</history>
                            <trends>365</trends>
                            <status>0</status>
                            <value_type>3</value_type>
                            <allowed_hosts/>
                            <units>Instances</units>
                            <delta>0</delta>
                            <snmpv3_contextname/>
                            <snmpv3_securityname/>
                            <snmpv3_securitylevel>0</snmpv3_securitylevel>
                            <snmpv3_authprotocol>0</snmpv3_authprotocol>
                            <snmpv3_authpassphrase/>
                            <snmpv3_privprotocol>0</snmpv3_privprotocol>
                            <snmpv3_privpassphrase/>
                            <formula>1</formula>
                            <delay_flex/>
                            <params/>
                            <ipmi_sensor/>
                            <data_type>0</data_type>
                            <authtype>0</authtype>
                            <username/>
                            <password/>
                            <publickey/>
                            <privatekey/>
                            <port/>
                            <description/>
                            <inventory_link>0</inventory_link>
                            <applications>
                                <application>
                                    <name>EC2 Summary</name>
                                </application>
                            </applications>
                            <valuemap/>
                            <logtimefmt/>
                            <application_prototypes/>
                        </item_prototype>
                        <item_prototype>
                            <name>Status Fail Details in Region {#REGION}</name>
                            <type>7</type>
                            <snmp_community/>
                            <multiplier>0</multiplier>
                            <snmp_oid/>
                            <key>ec2_summary[faildetails,{#REGION}]</key>
                            <delay>900</delay>
                            <history>90</history>
                            <trends>0</trends>
                            <status>0</status>
                            <value_type>4</value_type>
                            <allowed_hosts/>
                            <units/>
                            <delta>0</delta>
                            <snmpv3_contextname/>
                            <snmpv3_securityname/>
                            <snmpv3_securitylevel>0</snmpv3_securitylevel>
                            <snmpv3_authprotocol>0</snmpv3_authprotocol>
                            <snmpv3_authpassphrase/>
                            <snmpv3_privprotocol>0</snmpv3_privprotocol>
                            <snmpv3_privpassphrase/>
                            <formula>1</formula>
                            <delay_flex/>
                            <params/>
                            <ipmi_sensor/>
                            <data_type>0</data_type>
                            <authtype>0</authtype>
                            <username/>
                            <password/>
                            <publickey/>
                            <privatekey/>
                            <port/>
                            <description/>
                            <inventory_link>0</inventory_link>
                            <applications>
                                <application>
                                    <name>EC2 Summary</name>
                                </application>
                            </applications>
                            <valuemap/>
                            <logtimefmt/>
                            <application_prototypes/>
                        </item_prototype>
                        <item_prototype>
                            <name>Status OK Instances in Region {#REGION}</name>
                            <type>7</type>
                            <snmp_community/>
                            <multiplier>0</multiplier>
                            <snmp_oid/>
                            <key>ec2_summary[ok,{#REGION}]</key>
                            <delay>900</delay>
                            <history>90</history>
                            <trends>365</trends>
                            <status>0</status>
                            <value_type>3</value_type>
                            <allowed_hosts/>
                            <units>Instances</units>
                            <delta>0</delta>
                            <snmpv3_contextname/>
                            <snmpv3_securityname/>
                            <snmpv3_securitylevel>0</snmpv3_securitylevel>
                            <snmpv3_authprotocol>0</snmpv3_authprotocol>
                            <snmpv3_authpassphrase/>
                            <snmpv3_privprotocol>0</snmpv3_privprotocol>
                            <snmpv3_privpassphrase/>
                            <formula>1</formula>
                            <delay_flex/>
                            <params/>
                            <ipmi_sensor/>
                            <data_type>0</data_type>
                            <authtype>0</authtype>
                            <username/>
                            <password/>
                            <publickey/>
                            <privatekey/>
                            <port/>
                            <description/>
                            <inventory_link>0</inventory_link>
                            <applications>
                                <application>
                                    <name>EC2 Summary</name>
                                </application>
                            </applications>
                            <valuemap/>
                            <logtimefmt/>
                            <application_prototypes/>
                        </item_prototype>
                        <item_prototype>
                            <name>Running Instances in Region {#REGION}</name>
                            <type>7</type>
                            <snmp_community/>
                            <multiplier>0</multiplier>
                            <snmp_oid/>
                            <key>ec2_summary[running,{#REGION}]</key>
                            <delay>900</delay>
                            <history>90</history>
                            <trends>365</trends>
                            <status>0</status>
                            <value_type>3</value_type>
                            <allowed_hosts/>
                            <units>Instances</units>
                            <delta>0</delta>
                            <snmpv3_contextname/>
                            <snmpv3_securityname/>
                            <snmpv3_securitylevel>0</snmpv3_securitylevel>
                            <snmpv3_authprotocol>0</snmpv3_authprotocol>
                            <snmpv3_authpassphrase/>
                            <snmpv3_privprotocol>0</snmpv3_privprotocol>
                            <snmpv3_privpassphrase/>
                            <formula>1</formula>
                            <delay_flex/>
                            <params/>
                            <ipmi_sensor/>
                            <data_type>0</data_type>
                            <authtype>0</authtype>
                            <username/>
                            <password/>
                            <publickey/>
                            <privatekey/>
                            <port/>
                            <description/>
                            <inventory_link>0</inventory_link>
                            <applications>
                                <application>
                                    <name>EC2 Summary</name>
                                </application>
                            </applications>
                            <valuemap/>
                            <logtimefmt/>
                            <application_prototypes/>
                        </item_prototype>
                        <item_prototype>
                            <name>Scheduled Tasks Instances in Region {#REGION}</name>
                            <type>7</type>
                            <snmp_community/>
                            <multiplier>0</multiplier>
                            <snmp_oid/>
                            <key>ec2_summary[scheduled,{#REGION}]</key>
                            <delay>900</delay>
                            <history>90</history>
                            <trends>365</trends>
                            <status>0</status>
                            <value_type>3</value_type>
                            <allowed_hosts/>
                            <units>Instances</units>
                            <delta>0</delta>
                            <snmpv3_contextname/>
                            <snmpv3_securityname/>
                            <snmpv3_securitylevel>0</snmpv3_securitylevel>
                            <snmpv3_authprotocol>0</snmpv3_authprotocol>
                            <snmpv3_authpassphrase/>
                            <snmpv3_privprotocol>0</snmpv3_privprotocol>
                            <snmpv3_privpassphrase/>
                            <formula>1</formula>
                            <delay_flex/>
                            <params/>
                            <ipmi_sensor/>
                            <data_type>0</data_type>
                            <authtype>0</authtype>
                            <username/>
                            <password/>
                            <publickey/>
                            <privatekey/>
                            <port/>
                            <description/>
                            <inventory_link>0</inventory_link>
                            <applications>
                                <application>
                                    <name>EC2 Summary</name>
                                </application>
                            </applications>
                            <valuemap/>
                            <logtimefmt/>
                            <application_prototypes/>
                        </item_prototype>
                        <item_prototype>
                            <name>Scheduled Task Details in Region {#REGION}</name>
                            <type>7</type>
                            <snmp_community/>
                            <multiplier>0</multiplier>
                            <snmp_oid/>
                            <key>ec2_summary[scheduleddetails,{#REGION}]</key>
                            <delay>900</delay>
                            <history>90</history>
                            <trends>0</trends>
                            <status>0</status>
                            <value_type>4</value_type>
                            <allowed_hosts/>
                            <units/>
                            <delta>0</delta>
                            <snmpv3_contextname/>
                            <snmpv3_securityname/>
                            <snmpv3_securitylevel>0</snmpv3_securitylevel>
                            <snmpv3_authprotocol>0</snmpv3_authprotocol>
                            <snmpv3_authpassphrase/>
                            <snmpv3_privprotocol>0</snmpv3_privprotocol>
                            <snmpv3_privpassphrase/>
                            <formula>1</formula>
                            <delay_flex/>
                            <params/>
                            <ipmi_sensor/>
                            <data_type>0</data_type>
                            <authtype>0</authtype>
                            <username/>
                            <password/>
                            <publickey/>
                            <privatekey/>
                            <port/>
                            <description/>
                            <inventory_link>0</inventory_link>
                            <applications>
                                <application>
                                    <name>EC2 Summary</name>
                                </application>
                            </applications>
                            <valuemap/>
                            <logtimefmt/>
                            <application_prototypes/>
                        </item_prototype>
                        <item_prototype>
                            <name>Stopped Instances in Region {#REGION}</name>
                            <type>7</type>
                            <snmp_community/>
                            <multiplier>0</multiplier>
                            <snmp_oid/>
                            <key>ec2_summary[stopped,{#REGION}]</key>
                            <delay>900</delay>
                            <history>90</history>
                            <trends>365</trends>
                            <status>0</status>
                            <value_type>3</value_type>
                            <allowed_hosts/>
                            <units>Instances</units>
                            <delta>0</delta>
                            <snmpv3_contextname/>
                            <snmpv3_securityname/>
                            <snmpv3_securitylevel>0</snmpv3_securitylevel>
                            <snmpv3_authprotocol>0</snmpv3_authprotocol>
                            <snmpv3_authpassphrase/>
                            <snmpv3_privprotocol>0</snmpv3_privprotocol>
                            <snmpv3_privpassphrase/>
                            <formula>1</formula>
                            <delay_flex/>
                            <params/>
                            <ipmi_sensor/>
                            <data_type>0</data_type>
                            <authtype>0</authtype>
                            <username/>
                            <password/>
                            <publickey/>
                            <privatekey/>
                            <port/>
                            <description/>
                            <inventory_link>0</inventory_link>
                            <applications>
                                <application>
                                    <name>EC2 Summary</name>
                                </application>
                            </applications>
                            <valuemap/>
                            <logtimefmt/>
                            <application_prototypes/>
                        </item_prototype>
                        <item_prototype>
                            <name>System Status FAIL Instances in Region {#REGION}</name>
                            <type>7</type>
                            <snmp_community/>
                            <multiplier>0</multiplier>
                            <snmp_oid/>
                            <key>ec2_summary[sysfail,{#REGION}]</key>
                            <delay>900</delay>
                            <history>90</history>
                            <trends>365</trends>
                            <status>0</status>
                            <value_type>3</value_type>
                            <allowed_hosts/>
                            <units>Instances</units>
                            <delta>0</delta>
                            <snmpv3_contextname/>
                            <snmpv3_securityname/>
                            <snmpv3_securitylevel>0</snmpv3_securitylevel>
                            <snmpv3_authprotocol>0</snmpv3_authprotocol>
                            <snmpv3_authpassphrase/>
                            <snmpv3_privprotocol>0</snmpv3_privprotocol>
                            <snmpv3_privpassphrase/>
                            <formula>1</formula>
                            <delay_flex/>
                            <params/>
                            <ipmi_sensor/>
                            <data_type>0</data_type>
                            <authtype>0</authtype>
                            <username/>
                            <password/>
                            <publickey/>
                            <privatekey/>
                            <port/>
                            <description/>
                            <inventory_link>0</inventory_link>
                            <applications>
                                <application>
                                    <name>EC2 Summary</name>
                                </application>
                            </applications>
                            <valuemap/>
                            <logtimefmt/>
                            <application_prototypes/>
                        </item_prototype>
                        <item_prototype>
                            <name>System Status Fail Details in Region {#REGION}</name>
                            <type>7</type>
                            <snmp_community/>
                            <multiplier>0</multiplier>
                            <snmp_oid/>
                            <key>ec2_summary[sysfaildetails,{#REGION}]</key>
                            <delay>900</delay>
                            <history>90</history>
                            <trends>0</trends>
                            <status>0</status>
                            <value_type>4</value_type>
                            <allowed_hosts/>
                            <units/>
                            <delta>0</delta>
                            <snmpv3_contextname/>
                            <snmpv3_securityname/>
                            <snmpv3_securitylevel>0</snmpv3_securitylevel>
                            <snmpv3_authprotocol>0</snmpv3_authprotocol>
                            <snmpv3_authpassphrase/>
                            <snmpv3_privprotocol>0</snmpv3_privprotocol>
                            <snmpv3_privpassphrase/>
                            <formula>1</formula>
                            <delay_flex/>
                            <params/>
                            <ipmi_sensor/>
                            <data_type>0</data_type>
                            <authtype>0</authtype>
                            <username/>
                            <password/>
                            <publickey/>
                            <privatekey/>
                            <port/>
                            <description/>
                            <inventory_link>0</inventory_link>
                            <applications>
                                <application>
                                    <name>EC2 Summary</name>
                                </application>
                            </applications>
                            <valuemap/>
                            <logtimefmt/>
                            <application_prototypes/>
                        </item_prototype>
                        <item_prototype>
                            <name>System Status OK Instances in Region {#REGION}</name>
                            <type>7</type>
                            <snmp_community/>
                            <multiplier>0</multiplier>
                            <snmp_oid/>
                            <key>ec2_summary[sysok,{#REGION}]</key>
                            <delay>900</delay>
                            <history>90</history>
                            <trends>365</trends>
                            <status>0</status>
                            <value_type>3</value_type>
                            <allowed_hosts/>
                            <units>Instances</units>
                            <delta>0</delta>
                            <snmpv3_contextname/>
                            <snmpv3_securityname/>
                            <snmpv3_securitylevel>0</snmpv3_securitylevel>
                            <snmpv3_authprotocol>0</snmpv3_authprotocol>
                            <snmpv3_authpassphrase/>
                            <snmpv3_privprotocol>0</snmpv3_privprotocol>
                            <snmpv3_privpassphrase/>
                            <formula>1</formula>
                            <delay_flex/>
                            <params/>
                            <ipmi_sensor/>
                            <data_type>0</data_type>
                            <authtype>0</authtype>
                            <username/>
                            <password/>
                            <publickey/>
                            <privatekey/>
                            <port/>
                            <description/>
                            <inventory_link>0</inventory_link>
                            <applications>
                                <application>
                                    <name>EC2 Summary</name>
                                </application>
                            </applications>
                            <valuemap/>
                            <logtimefmt/>
                            <application_prototypes/>
                        </item_prototype>
                        <item_prototype>
                            <name>Terminated Instances in Region {#REGION}</name>
                            <type>7</type>
                            <snmp_community/>
                            <multiplier>0</multiplier>
                            <snmp_oid/>
                            <key>ec2_summary[terminated,{#REGION}]</key>
                            <delay>900</delay>
                            <history>90</history>
                            <trends>365</trends>
                            <status>0</status>
                            <value_type>3</value_type>
                            <allowed_hosts/>
                            <units>Instances</units>
                            <delta>0</delta>
                            <snmpv3_contextname/>
                            <snmpv3_securityname/>
                            <snmpv3_securitylevel>0</snmpv3_securitylevel>
                            <snmpv3_authprotocol>0</snmpv3_authprotocol>
                            <snmpv3_authpassphrase/>
                            <snmpv3_privprotocol>0</snmpv3_privprotocol>
                            <snmpv3_privpassphrase/>
                            <formula>1</formula>
                            <delay_flex/>
                            <params/>
                            <ipmi_sensor/>
                            <data_type>0</data_type>
                            <authtype>0</authtype>
                            <username/>
                            <password/>
                            <publickey/>
                            <privatekey/>
                            <port/>
                            <description/>
                            <inventory_link>0</inventory_link>
                            <applications>
                                <application>
                                    <name>EC2 Summary</name>
                                </application>
                            </applications>
                            <valuemap/>
                            <logtimefmt/>
                            <application_prototypes/>
                        </item_prototype>
                        <item_prototype>
                            <name>Total Instances in Region {#REGION}</name>
                            <type>7</type>
                            <snmp_community/>
                            <multiplier>0</multiplier>
                            <snmp_oid/>
                            <key>ec2_summary[total,{#REGION}]</key>
                            <delay>900</delay>
                            <history>90</history>
                            <trends>365</trends>
                            <status>0</status>
                            <value_type>3</value_type>
                            <allowed_hosts/>
                            <units>Instances</units>
                            <delta>0</delta>
                            <snmpv3_contextname/>
                            <snmpv3_securityname/>
                            <snmpv3_securitylevel>0</snmpv3_securitylevel>
                            <snmpv3_authprotocol>0</snmpv3_authprotocol>
                            <snmpv3_authpassphrase/>
                            <snmpv3_privprotocol>0</snmpv3_privprotocol>
                            <snmpv3_privpassphrase/>
                            <formula>1</formula>
                            <delay_flex/>
                            <params/>
                            <ipmi_sensor/>
                            <data_type>0</data_type>
                            <authtype>0</authtype>
                            <username/>
                            <password/>
                            <publickey/>
                            <privatekey/>
                            <port/>
                            <description/>
                            <inventory_link>0</inventory_link>
                            <applications>
                                <application>
                                    <name>EC2 Summary</name>
                                </application>
                            </applications>
                            <valuemap/>
                            <logtimefmt/>
                            <application_prototypes/>
                        </item_prototype>
                    </item_prototypes>
                    <trigger_prototypes>
                        <trigger_prototype>
                            <expression>{Template_AWS_Services:ec2_summary[running,{#REGION}].nodata(3600)}=1</expression>
                            <name>Cannot collect data about instance statuses in region {#REGION}</name>
                            <url/>
                            <status>0</status>
                            <priority>3</priority>
                            <description>Alert when no data collected for 1 hour</description>
                            <type>0</type>
                            <dependencies/>
                        </trigger_prototype>
                        <trigger_prototype>
                            <expression>{Template_AWS_Services:ec2_summary[running,{#REGION}].last()}&gt;1.2*{Template_AWS_Services:ec2_summary[running,{#REGION}].min(600)} or {Template_AWS_Services:ec2_summary[running,{#REGION}].last()}&lt;0.8*{Template_AWS_Services:ec2_summary[running,{#REGION}].max(600)}</expression>
                            <name>Change in Running Instances Greater than 20% in Last Hour in Region {#REGION}</name>
                            <url/>
                            <status>0</status>
                            <priority>2</priority>
                            <description>This trigger alerts when there is an increase in instances by 20% or decrease in instances by 20% in the AWS region in the past hour.</description>
                            <type>0</type>
                            <dependencies/>
                        </trigger_prototype>
                        <trigger_prototype>
                            <expression>{Template_AWS_Services:ec2_summary[stopped,{#REGION}].last()}&gt;1.2*{Template_AWS_Services:ec2_summary[stopped,{#REGION}].min(600)} or {Template_AWS_Services:ec2_summary[stopped,{#REGION}].last()}&lt;0.8*{Template_AWS_Services:ec2_summary[stopped,{#REGION}].max(600)}</expression>
                            <name>Change in Stopped Instances Greater than 20% in Last Hour in Region {#REGION}</name>
                            <url/>
                            <status>0</status>
                            <priority>2</priority>
                            <description>This trigger alerts when there is an increase in instances by 20% or decrease in instances by 20% in the AWS region in the past hour.</description>
                            <type>0</type>
                            <dependencies/>
                        </trigger_prototype>
                        <trigger_prototype>
                            <expression>{Template_AWS_Services:ec2_summary[terminated,{#REGION}].last()}&gt;1.2*{Template_AWS_Services:ec2_summary[terminated,{#REGION}].min(600)} or {Template_AWS_Services:ec2_summary[terminated,{#REGION}].last()}&lt;0.8*{Template_AWS_Services:ec2_summary[terminated,{#REGION}].max(600)}</expression>
                            <name>Change in Terminated Instances Greater than 20% in Last Hour in Region {#REGION}</name>
                            <url/>
                            <status>0</status>
                            <priority>2</priority>
                            <description>This trigger alerts when there is an increase in instances by 20% or decrease in instances by 20% in the AWS region in the past hour.</description>
                            <type>0</type>
                            <dependencies/>
                        </trigger_prototype>
                        <trigger_prototype>
                            <expression>{Template_AWS_Services:ec2_summary[total,{#REGION}].last()}&gt;1.2*{Template_AWS_Services:ec2_summary[total,{#REGION}].min(600)} or {Template_AWS_Services:ec2_summary[total,{#REGION}].last()}&lt;0.8*{Template_AWS_Services:ec2_summary[total,{#REGION}].max(600)}</expression>
                            <name>Change in Total Number of Instances Greater than 20% in Last Hour in Region {#REGION}</name>
                            <url/>
                            <status>0</status>
                            <priority>4</priority>
                            <description>This trigger alerts when there is an increase in instances by 20% or decrease in instances by 20% in the AWS region in the past hour.</description>
                            <type>0</type>
                            <dependencies/>
                        </trigger_prototype>
                        <trigger_prototype>
                            <expression>{Template_AWS_Services:ec2_summary[scheduled,{#REGION}].max(600)}&gt;0</expression>
                            <name>Instances with Scheduled tasks in Region {#REGION} in Past Hour</name>
                            <url/>
                            <status>0</status>
                            <priority>4</priority>
                            <description>This trigger alerts when there are instances with status fail in given region in past hour.</description>
                            <type>0</type>
                            <dependencies/>
                        </trigger_prototype>
                        <trigger_prototype>
                            <expression>{Template_AWS_Services:ec2_summary[fail,{#REGION}].max(600)}&gt;0</expression>
                            <name>Instances with Status Fail in Region {#REGION} in Past Hour</name>
                            <url/>
                            <status>0</status>
                            <priority>4</priority>
                            <description>This trigger alerts when there are instances with status fail in given region in past hour.</description>
                            <type>0</type>
                            <dependencies/>
                        </trigger_prototype>
                        <trigger_prototype>
                            <expression>{Template_AWS_Services:ec2_summary[sysfail,{#REGION}].max(600)}&gt;0</expression>
                            <name>Instances with System Status Fail in Region {#REGION} in Past Hour</name>
                            <url/>
                            <status>0</status>
                            <priority>4</priority>
                            <description>This trigger alerts when there are instances with status fail in given region in past hour.</description>
                            <type>0</type>
                            <dependencies/>
                        </trigger_prototype>
                    </trigger_prototypes>
                    <graph_prototypes/>
                    <host_prototypes/>
                </discovery_rule>
            </discovery_rules>
            <macros/>
            <templates/>
            <screens/>
        </template>
    </templates>
</zabbix_export>
